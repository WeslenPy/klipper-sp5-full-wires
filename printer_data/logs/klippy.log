=============== Log rollover at Fri Apr 18 00:17:16 2025 ===============
Starting Klippy...
Args: ['/home/orangepi/klipper/klippy/klippy.py', '/home/orangepi/printer_data/config/printer.cfg', '-I', '/home/orangepi/printer_data/comms/klippy.serial', '-l', '/home/orangepi/printer_data/logs/klippy.log', '-a', '/home/orangepi/printer_data/comms/klippy.sock']
Git version: 'v0.13.0-33-g413ff19e-dirty'
Untracked files: klippy/extras/auto_speed.py, klippy/extras/autotune_tmc.py, klippy/extras/motor_constants.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, Nov 30 2024, 21:22:50) [GCC 12.2.0]'
Start printer at Fri Apr 18 00:17:18 2025 (1744935438.0 22.3)
===== Config file =====
[gcode_macro CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% else %}
	{% endif %}

[gcode_macro G29]
gcode = 
	M400
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE profile=6 mesh_min=15,21 mesh_max=210,220 probe_count=6 algorithm=bicubic
	M400
	G4 P2000
	G91
	G1 Z5 F300
	G90
	G28 Z
	G1 X117.5 Y100 F12000
	G1 Z0 F300

[gcode_macro PRINT_START]
gcode = 
	
	G92 E0
	G90
	
	
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
	{% set BED_MESH = params.BED_MESH|default('default')|string %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	
	SET_BED_TEMPERATURE TARGET={BED_TEMP}
	BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
	{% if BED_HEAT_SOAK_MINUTES > 0 %}
	RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
	G4 P{BED_HEAT_SOAK_MINUTES * 60000}
	{% endif %}
	
	CG28
	
	{% if BED_MESH == 'full' %}
	BED_MESH_CALIBRATE
	{% elif BED_MESH == 'adaptive' %}
	BED_MESH_CALIBRATE ADAPTIVE=1
	{% elif BED_MESH != 'none' %}
	BED_MESH_PROFILE LOAD={BED_MESH}
	{% endif %}
	Smart_Park
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
	LINE_PURGE
	G92 E0
	G1 Z2.0 F3000
	M117 Printing

[gcode_macro PRINT_END]
gcode = 
	
	
	M400
	TURN_OFF_HEATERS
	G92 E0
	G91
	G1 E-2 F2700
	G1 X5 Y5 F3000
	G1 E-2 Z0.2 F1600
	G1 Z4 F3000
	G90
	G1 X0 Y230
	M107
	M84
	
	M117
	END_TUNE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	PAUSE_TUNE
	{% set z = params.Z|default(30)|int %}
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	G91
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 Z{z} F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	{% if printer['pause_resume'].is_paused|int == 1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	G1 E80  F200
	G4 P2000
	G1 X20 F15000
	G1 X-20
	G1 X20
	G1 X-20
	G1 X20
	G1 X-20
	RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60
	G1 X-3 Y-3 F3000
	G1 Z{zhop * -1} F900
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M400
	BASE_RESUME
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	
	{% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
	{% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
	{% set MINIMUM_RATIO    = printer.configfile.settings['printer'].minimum_cruise_ratio|float %}
	{% set SQUARE_VELOCITY   = printer.configfile.settings['printer'].square_corner_velocity|float %}
	
	SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} MINIMUM_CRUISE_RATIO={MINIMUM_RATIO} SQUARE_CORNER_VELOCITY={SQUARE_VELOCITY}
	
	
	{% set z = params.Z|default(100)|int %}
	{% set x_park = params.X|default(printer.toolhead.axis_minimum.x+5)|int %}
	{% set y_park = params.Y|default(printer.toolhead.axis_maximum.y-5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE
	M400
	M220 S100
	M221 S100
	G91
	M83
	G1 E-10.0 F1200
	TURN_OFF_HEATERS
	M107
	{% if (printer.gcode_move.position.z+5) < z %}
	G90
	G0 X{x_park} Y{y_park} Z{z+5} F6000
	{% endif %}
	{%if (printer.gcode_move.position.z+5) >= z %}
	{%if (printer.gcode_move.position.z+5) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z5 F300
	G90
	G0 X{x_park} Y{y_park} F6000
	{% else %}
	G90
	G0 X{x_park} Y{y_park} Z{printer.toolhead.axis_maximum.z} F6000
	{% endif %}
	{% endif %}
	M84

[gcode_macro SET_BED_TEMPERATURE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode = 
	{% if params.MINIMUM is defined and params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
	{% elif params.MINIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
	{% elif params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
	{% else %}
	RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
	{% endif %}

[gcode_macro Axis_Twist_Comp_Tune]
gcode = 
	CG28
	AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Z_Tilt_Adjust_Comp]
gcode = 
	CG28
	Z_TILT_ADJUST

[gcode_macro PID_Tune_EXTRUDER]
gcode = 
	{% set temperature = params.TEMPERATURE|default(210) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=extruder TARGET={temperature}
	SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode = 
	{% set temperature = params.TEMPERATURE|default(60) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
	SAVE_CONFIG

[gcode_macro Bed_Level_Screws_Tune]
gcode = 
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Z_Offset]
gcode = 
	CG28
	PROBE_CALIBRATE

[gcode_macro SPEED_TEST]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Speed Test Macro"
	CG28
	AUTO_SPEED

[gcode_macro Auto_Full_Bed_Level]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	Z_Tilt_Adjust_Comp
	BED_MESH_CALIBRATE

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[virtual_sdcard]
path = ~/printer_data/gcodes

[output_pin relay]
pin = PA2
value = 1

[exclude_object]

[stepper_x]
step_pin = PE3
dir_pin = !PE2
enable_pin = !PE4
microsteps = 16
rotation_distance = 40
endstop_pin = !PA15
position_endstop = 0
position_max = 300
homing_speed = 50

[tmc2209 stepper_x]
uart_pin = PC7
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_x]
motor = us-17hs4401s

[motor_constants us-17hs4401s]
resistance = 1.50
inductance = 0.0028
holding_torque = 0.40
max_current = 1.50
steps_per_revolution = 200

[stepper_y]
step_pin = PE0
dir_pin = !PB9
enable_pin = !PE1
microsteps = 16
rotation_distance = 40
endstop_pin = !PA12
position_endstop = 300
position_max = 300
homing_speed = 50

[tmc2209 stepper_y]
uart_pin = PC13
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_y]
motor = us-17hs4401s

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
microsteps = 16
rotation_distance = 8
endstop_pin = !PA11
position_endstop = 0.5
position_max = 340

[tmc2209 stepper_z]
uart_pin = PB13
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z]
motor = 42shdc3030z-17b18b

[stepper_z1]
step_pin = PA6
dir_pin = !PA1
enable_pin = !PA3
microsteps = 16
rotation_distance = 8

[tmc2209 stepper_z1]
uart_pin = PB14
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z1]
motor = 42shdc3030z-17b18b

[motor_constants 42shdc3030z-17b18b]
resistance = 1.65
inductance = 0.0028
holding_torque = 0.50
max_current = 1.68
steps_per_revolution = 200

[extruder]
step_pin = PD6
dir_pin = !PD3
enable_pin = !PB3
microsteps = 16
gear_ratio = 9.5:1
rotation_distance = 43.844
nozzle_diameter = 0.4
filament_diameter = 1.75
heater_pin = PC3
sensor_type = ATC Semitec 104GT-2
sensor_pin = PC1
min_temp = 0
max_temp = 300
min_extrude_temp = 150
pressure_advance = 0.05
pressure_advance_smooth_time = 0.040
max_extrude_cross_section = 5

[verify_heater extruder]
max_error = 200
check_gain_time = 35
hysteresis = 100
heating_gain = 1

[tmc2209 extruder]
uart_pin = PE5
interpolate = True
run_current = 0.75
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc extruder]
motor = bjy36d12-04v05

[motor_constants bjy36d12-04v05]
resistance = 2.0
inductance = 0.0012
holding_torque = 0.09
max_current = 0.8
steps_per_revolution = 200

[fan]
pin = PB1
kick_start_time = 0.5
off_below = 0.10

[heater_bed]
heater_pin = PA0
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
control = pid
min_temp = 0
max_temp = 130
pid_kp = 325.10
pid_ki = 63.35
pid_kd = 417.10

[verify_heater heater_bed]
max_error = 120
check_gain_time = 120
hysteresis = 20
heating_gain = 0.2

[safe_z_home]
home_xy_position = 160, 160
speed = 300
z_hop = 7
z_hop_speed = 25

[idle_timeout]
timeout = 1800

[z_tilt]
z_positions = 
	343, 160
	-13, 160
points = 
	20, 160
	290, 160
speed = 300
horizontal_move_z = 7
retries = 10
retry_tolerance = 0.09

[bed_screws]
screw1 = 24, 62
screw1_name = front left
screw2 = 24, 300
screw2_name = back left
screw3 = 293, 300
screw3_name = back right
screw4 = 293, 62
screw4_name = front right

[screws_tilt_adjust]
screw1 = 24, 62
screw1_name = front left
screw2 = 24,300
screw2_name = back left
screw3 = 263, 300
screw3_name = back right
screw4 = 263, 62
screw4_name = front right
horizontal_move_z = 5
speed = 250
screw_thread = CW-M4

[printer]
kinematics = corexy
max_velocity = 400
max_accel = 19840
max_z_velocity = 25
max_z_accel = 100
minimum_cruise_ratio = 0.5
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 1.0

[pause_resume]
recover_velocity = 50.0

[force_move]
enable_force_move = False

[input_shaper]
shaper_freq_x = 82.4
shaper_freq_y = 54.4
shaper_type = mzv

[display_status]
=======================
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 125, in _read_config
    m.add_printer_objects(config)
  File "/home/orangepi/klipper/klippy/toolhead.py", line 678, in add_printer_objects
    kinematics.extruder.add_printer_objects(config)
  File "/home/orangepi/klipper/klippy/kinematics/extruder.py", line 313, in add_printer_objects
    pe = PrinterExtruder(config.getsection(section), i)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/kinematics/extruder.py", line 143, in __init__
    self.heater = pheaters.setup_heater(config, gcode_id)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/heaters.py", line 279, in setup_heater
    self.heaters[heater_name] = heater = Heater(config, sensor)
                                         ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/heaters.py", line 50, in __init__
    algo = config.getchoice('control', algos)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 82, in getchoice
    c = self.get(option, default, note_valid=note_valid)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 62, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 37, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'control' in section 'extruder' must be specified
webhooks client 281472753531280: New connection
webhooks client 281472753531280: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
