Starting Klippy...
Args: ['/home/orangepi/klipper/klippy/klippy.py', '/home/orangepi/printer_data/config/printer.cfg', '-I', '/home/orangepi/printer_data/comms/klippy.serial', '-l', '/home/orangepi/printer_data/logs/klippy.log', '-a', '/home/orangepi/printer_data/comms/klippy.sock']
Git version: 'v0.13.0-33-g413ff19e'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, Nov 30 2024, 21:22:50) [GCC 12.2.0]'
Building C code module c_helper.so
Start printer at Thu Apr 17 19:11:42 2025 (1744917102.7 647.3)
===== Config file =====
[mcu]
serial = /dev/serial/by-id/<your-mcu-id>

[virtual_sdcard]
path = /home/orangepi/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[printer]
kinematics = none
max_velocity = 1000
max_accel = 1000
=======================
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
MCU error during connect
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/mcu.py", line 794, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 183, in connect_uart
    self._error("Unable to connect")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 131, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
            ^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/mcu.py", line 799, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
mcu 'mcu': Unable to connect
Once the underlying issue is corrected, use the
"FIRMWARE_RESTART" command to reset the firmware, reload the
config, and restart the host software.
Error configuring printer

No build file /home/orangepi/klipper/klippy/../.config
No build file /home/orangepi/klipper/klippy/../out/klipper.dict
No build file /home/orangepi/klipper/klippy/../out/klipper.elf
webhooks client 281472965467856: New connection
webhooks client 281472965467856: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
webhooks client 281472965467856: Disconnected
Starting Klippy...
Args: ['/home/orangepi/klipper/klippy/klippy.py', '/home/orangepi/printer_data/config/printer.cfg', '-I', '/home/orangepi/printer_data/comms/klippy.serial', '-l', '/home/orangepi/printer_data/logs/klippy.log', '-a', '/home/orangepi/printer_data/comms/klippy.sock']
Git version: 'v0.13.0-33-g413ff19e'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, Nov 30 2024, 21:22:50) [GCC 12.2.0]'
Start printer at Thu Apr 17 19:15:25 2025 (1744917325.4 869.9)
===== Config file =====
[virtual_sdcard]
path = /home/orangepi/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro _CLIENT_LINEAR_MOVE]
description = Linear move with save and restore of the gcode state
gcode = 
	{% set x_move = "X" ~ params.X if params.X is defined else "" %}
	{% set y_move = "Y" ~ params.Y if params.Y is defined else "" %}
	{% set z_move = "Z" ~ params.Z if params.Z is defined else "" %}
	{% set e_move = "E" ~ params.E if params.E is defined else "" %}
	{% set rate = "F" ~ params.F if params.F is defined else "" %}
	{% set ABSOLUTE = params.ABSOLUTE | default(0) | int != 0 %}
	{% set ABSOLUTE_E = params.ABSOLUTE_E | default(0) | int != 0 %}
	SAVE_GCODE_STATE NAME=_client_movement
	{% if x_move or y_move or z_move %}
	G9{ 0 if ABSOLUTE else 1 }
	{% endif %}
	{% if e_move %}
	M8{ 2 if ABSOLUTE_E else 3 }
	{% endif %}
	G1 { x_move } { y_move } { z_move } { e_move } { rate }
	RESTORE_GCODE_STATE NAME=_client_movement

[mcu]
serial = /dev/serial/by-id/<your-mcu-id>

[printer]
kinematics = none
max_velocity = 1000
max_accel = 1000
=======================
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
webhooks client 281472822004304: New connection
webhooks client 281472822004304: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
MCU error during connect
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/mcu.py", line 794, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 183, in connect_uart
    self._error("Unable to connect")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 131, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
            ^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/mcu.py", line 799, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
mcu 'mcu': Unable to connect
Once the underlying issue is corrected, use the
"FIRMWARE_RESTART" command to reset the firmware, reload the
config, and restart the host software.
Error configuring printer

No build file /home/orangepi/klipper/klippy/../.config
No build file /home/orangepi/klipper/klippy/../out/klipper.dict
No build file /home/orangepi/klipper/klippy/../out/klipper.elf
webhooks client 281472822004304: Disconnected
webhooks client 281472823192144: New connection
webhooks client 281472823192144: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
Starting Klippy...
Args: ['/home/orangepi/klipper/klippy/klippy.py', '/home/orangepi/printer_data/config/printer.cfg', '-I', '/home/orangepi/printer_data/comms/klippy.serial', '-l', '/home/orangepi/printer_data/logs/klippy.log', '-a', '/home/orangepi/printer_data/comms/klippy.sock']
Git version: 'v0.13.0-33-g413ff19e'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, Nov 30 2024, 21:22:50) [GCC 12.2.0]'
Start printer at Thu Apr 17 20:09:14 2025 (1744920554.5 26.2)
===== Config file =====
[virtual_sdcard]
path = /home/orangepi/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro _CLIENT_LINEAR_MOVE]
description = Linear move with save and restore of the gcode state
gcode = 
	{% set x_move = "X" ~ params.X if params.X is defined else "" %}
	{% set y_move = "Y" ~ params.Y if params.Y is defined else "" %}
	{% set z_move = "Z" ~ params.Z if params.Z is defined else "" %}
	{% set e_move = "E" ~ params.E if params.E is defined else "" %}
	{% set rate = "F" ~ params.F if params.F is defined else "" %}
	{% set ABSOLUTE = params.ABSOLUTE | default(0) | int != 0 %}
	{% set ABSOLUTE_E = params.ABSOLUTE_E | default(0) | int != 0 %}
	SAVE_GCODE_STATE NAME=_client_movement
	{% if x_move or y_move or z_move %}
	G9{ 0 if ABSOLUTE else 1 }
	{% endif %}
	{% if e_move %}
	M8{ 2 if ABSOLUTE_E else 3 }
	{% endif %}
	G1 { x_move } { y_move } { z_move } { e_move } { rate }
	RESTORE_GCODE_STATE NAME=_client_movement

[mcu]
serial = /dev/serial/by-id/<your-mcu-id>

[printer]
kinematics = none
max_velocity = 1000
max_accel = 1000
=======================
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
webhooks client 281472951393488: New connection
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
webhooks client 281472951393488: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/<your-mcu-id>: [Errno 2] No such file or directory: '/dev/serial/by-id/<your-mcu-id>'
MCU error during connect
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/mcu.py", line 794, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 183, in connect_uart
    self._error("Unable to connect")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 131, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
            ^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/mcu.py", line 799, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
mcu 'mcu': Unable to connect
Once the underlying issue is corrected, use the
"FIRMWARE_RESTART" command to reset the firmware, reload the
config, and restart the host software.
Error configuring printer

No build file /home/orangepi/klipper/klippy/../.config
No build file /home/orangepi/klipper/klippy/../out/klipper.dict
No build file /home/orangepi/klipper/klippy/../out/klipper.elf
Starting Klippy...
Args: ['/home/orangepi/klipper/klippy/klippy.py', '/home/orangepi/printer_data/config/printer.cfg', '-I', '/home/orangepi/printer_data/comms/klippy.serial', '-l', '/home/orangepi/printer_data/logs/klippy.log', '-a', '/home/orangepi/printer_data/comms/klippy.sock']
Git version: 'v0.13.0-33-g413ff19e'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, Nov 30 2024, 21:22:50) [GCC 12.2.0]'
Start printer at Thu Apr 17 20:47:56 2025 (1744922876.7 22.2)
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 116, in _read_config
    config = pconfig.read_main_config()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 483, in read_main_config
    fileconfig, autosave_fileconfig = self.autosave.load_main_config()
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 306, in load_main_config
    regular_fileconfig = cfgrdr.build_fileconfig_with_includes(
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 231, in build_fileconfig_with_includes
    self._parse_config(data, filename, fileconfig, set())
  File "/home/orangepi/klipper/klippy/configfile.py", line 223, in _parse_config
    self._resolve_include(filename, include_spec, fileconfig,
  File "/home/orangepi/klipper/klippy/configfile.py", line 195, in _resolve_include
    raise error("Include file '%s' does not exist" % (include_glob,))
configparser.Error: Include file '/home/orangepi/printer_data/config/fluidd.cfg' does not exist
webhooks client 281473472392336: New connection
webhooks client 281473472392336: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
Starting Klippy...
Args: ['/home/orangepi/klipper/klippy/klippy.py', '/home/orangepi/printer_data/config/printer.cfg', '-I', '/home/orangepi/printer_data/comms/klippy.serial', '-l', '/home/orangepi/printer_data/logs/klippy.log', '-a', '/home/orangepi/printer_data/comms/klippy.sock']
Git version: 'v0.13.0-33-g413ff19e-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/motor_constants.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, Nov 30 2024, 21:22:50) [GCC 12.2.0]'
Start printer at Thu Apr 17 20:51:01 2025 (1744923061.3 192.8)
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 116, in _read_config
    config = pconfig.read_main_config()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 483, in read_main_config
    fileconfig, autosave_fileconfig = self.autosave.load_main_config()
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 306, in load_main_config
    regular_fileconfig = cfgrdr.build_fileconfig_with_includes(
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 231, in build_fileconfig_with_includes
    self._parse_config(data, filename, fileconfig, set())
  File "/home/orangepi/klipper/klippy/configfile.py", line 223, in _parse_config
    self._resolve_include(filename, include_spec, fileconfig,
  File "/home/orangepi/klipper/klippy/configfile.py", line 195, in _resolve_include
    raise error("Include file '%s' does not exist" % (include_glob,))
configparser.Error: Include file '/home/orangepi/printer_data/config/fluidd.cfg' does not exist
webhooks client 281472838207184: New connection
webhooks client 281472838207184: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
Starting Klippy...
Args: ['/home/orangepi/klipper/klippy/klippy.py', '/home/orangepi/printer_data/config/printer.cfg', '-I', '/home/orangepi/printer_data/comms/klippy.serial', '-l', '/home/orangepi/printer_data/logs/klippy.log', '-a', '/home/orangepi/printer_data/comms/klippy.sock']
Git version: 'v0.13.0-33-g413ff19e-dirty'
Untracked files: klippy/extras/autotune_tmc.py, klippy/extras/motor_constants.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, Nov 30 2024, 21:22:50) [GCC 12.2.0]'
Start printer at Thu Apr 17 20:53:39 2025 (1744923219.9 351.4)
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 116, in _read_config
    config = pconfig.read_main_config()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 483, in read_main_config
    fileconfig, autosave_fileconfig = self.autosave.load_main_config()
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 306, in load_main_config
    regular_fileconfig = cfgrdr.build_fileconfig_with_includes(
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 231, in build_fileconfig_with_includes
    self._parse_config(data, filename, fileconfig, set())
  File "/home/orangepi/klipper/klippy/configfile.py", line 223, in _parse_config
    self._resolve_include(filename, include_spec, fileconfig,
  File "/home/orangepi/klipper/klippy/configfile.py", line 195, in _resolve_include
    raise error("Include file '%s' does not exist" % (include_glob,))
configparser.Error: Include file '/home/orangepi/printer_data/config/fluidd.cfg' does not exist
webhooks client 281473402769232: New connection
webhooks client 281473402769232: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
Starting Klippy...
Args: ['/home/orangepi/klipper/klippy/klippy.py', '/home/orangepi/printer_data/config/printer.cfg', '-I', '/home/orangepi/printer_data/comms/klippy.serial', '-l', '/home/orangepi/printer_data/logs/klippy.log', '-a', '/home/orangepi/printer_data/comms/klippy.sock']
Git version: 'v0.13.0-33-g413ff19e-dirty'
Untracked files: klippy/extras/auto_speed.py, klippy/extras/autotune_tmc.py, klippy/extras/motor_constants.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, Nov 30 2024, 21:22:50) [GCC 12.2.0]'
Start printer at Thu Apr 17 20:53:51 2025 (1744923231.3 362.8)
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 116, in _read_config
    config = pconfig.read_main_config()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 483, in read_main_config
    fileconfig, autosave_fileconfig = self.autosave.load_main_config()
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 306, in load_main_config
    regular_fileconfig = cfgrdr.build_fileconfig_with_includes(
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 231, in build_fileconfig_with_includes
    self._parse_config(data, filename, fileconfig, set())
  File "/home/orangepi/klipper/klippy/configfile.py", line 223, in _parse_config
    self._resolve_include(filename, include_spec, fileconfig,
  File "/home/orangepi/klipper/klippy/configfile.py", line 195, in _resolve_include
    raise error("Include file '%s' does not exist" % (include_glob,))
configparser.Error: Include file '/home/orangepi/printer_data/config/fluidd.cfg' does not exist
webhooks client 281473382969040: New connection
webhooks client 281473382969040: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
webhooks client 281473382969040: Disconnected
webhooks client 281473383256144: New connection
webhooks client 281473383256144: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
webhooks client 281473383256144: Disconnected
Restarting printer
Start printer at Thu Apr 17 20:57:08 2025 (1744923428.2 559.7)
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 116, in _read_config
    config = pconfig.read_main_config()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 483, in read_main_config
    fileconfig, autosave_fileconfig = self.autosave.load_main_config()
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 306, in load_main_config
    regular_fileconfig = cfgrdr.build_fileconfig_with_includes(
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 231, in build_fileconfig_with_includes
    self._parse_config(data, filename, fileconfig, set())
  File "/home/orangepi/klipper/klippy/configfile.py", line 223, in _parse_config
    self._resolve_include(filename, include_spec, fileconfig,
  File "/home/orangepi/klipper/klippy/configfile.py", line 195, in _resolve_include
    raise error("Include file '%s' does not exist" % (include_glob,))
configparser.Error: Include file '/home/orangepi/printer_data/config/fluidd.cfg' does not exist
webhooks client 281473382738768: New connection
webhooks client 281473382738768: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
webhooks client 281473382738768: Disconnected
Restarting printer
Start printer at Thu Apr 17 20:57:29 2025 (1744923449.6 581.1)
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 116, in _read_config
    config = pconfig.read_main_config()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 483, in read_main_config
    fileconfig, autosave_fileconfig = self.autosave.load_main_config()
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 306, in load_main_config
    regular_fileconfig = cfgrdr.build_fileconfig_with_includes(
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 231, in build_fileconfig_with_includes
    self._parse_config(data, filename, fileconfig, set())
  File "/home/orangepi/klipper/klippy/configfile.py", line 223, in _parse_config
    self._resolve_include(filename, include_spec, fileconfig,
  File "/home/orangepi/klipper/klippy/configfile.py", line 195, in _resolve_include
    raise error("Include file '%s' does not exist" % (include_glob,))
configparser.Error: Include file '/home/orangepi/printer_data/config/fluidd.cfg' does not exist
webhooks client 281473382848976: New connection
webhooks client 281473382848976: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
webhooks client 281473382848976: Disconnected
Restarting printer
Start printer at Thu Apr 17 20:57:44 2025 (1744923464.9 596.4)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00

[adxl345]
cs_pin = EBBCan: PB12
spi_software_sclk_pin = EBBCan: PB10
spi_software_mosi_pin = EBBCan: PB11
spi_software_miso_pin = EBBCan: PB2
axes_map = x,y,z

[extruder]
step_pin = EBBCan: PD0
dir_pin = EBBCan: PD1
enable_pin = !EBBCan: PD2
microsteps = 16
gear_ratio = 9.5:1
rotation_distance = 43.844
nozzle_diameter = 0.4
filament_diameter = 1.75
heater_pin = EBBCan: PB13
sensor_type = ATC Semitec 104GT-2
sensor_pin = EBBCan: PA3
min_temp = 0
max_temp = 300
min_extrude_temp = 150
pressure_advance = 0.05
pressure_advance_smooth_time = 0.040
max_extrude_cross_section = 5
control = pid
pid_kp = 37.351
pid_ki = 11.857
pid_kd = 29.414

[verify_heater extruder]
max_error = 200
check_gain_time = 35
hysteresis = 100
heating_gain = 1

[tmc2209 extruder]
uart_pin = EBBCan: PA15
interpolate = True
run_current = 0.75
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc extruder]
motor = bjy36d12-04v05

[motor_constants bjy36d12-04v05]
resistance = 2.0
inductance = 0.0012
holding_torque = 0.09
max_current = 0.8
steps_per_revolution = 200

[fan]
pin = EBBCan: PA0
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = EBBCan: PA1
max_power = 1.0
kick_start_time = 0.5
heater = extruder
heater_temp = 50.0

[filament_switch_sensor switch_sensor]
switch_pin = EBBCan:PB4

[shaketune]
result_folder = ~/printer_data/config/ShakeTune_results

[gcode_macro Probe_Deploy]
gcode = 
	SET_PIN PIN=probe_enable VALUE=1

[gcode_macro Probe_Stow]
gcode = 
	SET_PIN PIN=probe_enable VALUE=0

[output_pin probe_enable]
pin = EBBCan:PB9
value = 0

[probe]
pin = ^!EBBCan:PB8
deactivate_on_each_sample = False
x_offset = 0
y_offset = -38.0
speed = 5.0
samples = 2
samples_tolerance = 0.05
samples_tolerance_retries = 3
activate_gcode = 
	Probe_Deploy
	G4 P500
deactivate_gcode = 
	Probe_Stow
z_offset = 1.699

[bed_mesh]
speed = 300
horizontal_move_z = 4
mesh_min = 20, 45
mesh_max = 290,240
zero_reference_position = 160,160
fade_start = 0.4
fade_end = 10.0
probe_count = 9,9
algorithm = bicubic

[gcode_macro CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% else %}
	{% endif %}

[gcode_macro G29]
gcode = 
	M400
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE profile=6 mesh_min=15,21 mesh_max=210,220 probe_count=6 algorithm=bicubic
	M400
	G4 P2000
	G91
	G1 Z5 F300
	G90
	G28 Z
	G1 X117.5 Y100 F12000
	G1 Z0 F300

[gcode_macro PRINT_START]
gcode = 
	
	G92 E0
	G90
	
	
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
	{% set BED_MESH = params.BED_MESH|default('default')|string %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	
	SET_BED_TEMPERATURE TARGET={BED_TEMP}
	BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
	{% if BED_HEAT_SOAK_MINUTES > 0 %}
	RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
	G4 P{BED_HEAT_SOAK_MINUTES * 60000}
	{% endif %}
	
	CG28
	
	{% if BED_MESH == 'full' %}
	BED_MESH_CALIBRATE
	{% elif BED_MESH == 'adaptive' %}
	BED_MESH_CALIBRATE ADAPTIVE=1
	{% elif BED_MESH != 'none' %}
	BED_MESH_PROFILE LOAD={BED_MESH}
	{% endif %}
	Smart_Park
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
	LINE_PURGE
	G92 E0
	G1 Z2.0 F3000
	M117 Printing

[gcode_macro PRINT_END]
gcode = 
	
	
	M400
	TURN_OFF_HEATERS
	G92 E0
	G91
	G1 E-2 F2700
	G1 X5 Y5 F3000
	G1 E-2 Z0.2 F1600
	G1 Z4 F3000
	G90
	G1 X0 Y230
	M107
	M84
	
	M117
	END_TUNE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	PAUSE_TUNE
	{% set z = params.Z|default(30)|int %}
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	G91
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 Z{z} F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	{% if printer['pause_resume'].is_paused|int == 1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	G1 E80  F200
	G4 P2000
	G1 X20 F15000
	G1 X-20
	G1 X20
	G1 X-20
	G1 X20
	G1 X-20
	RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60
	G1 X-3 Y-3 F3000
	G1 Z{zhop * -1} F900
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M400
	BASE_RESUME
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	
	{% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
	{% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
	{% set MINIMUM_RATIO    = printer.configfile.settings['printer'].minimum_cruise_ratio|float %}
	{% set SQUARE_VELOCITY   = printer.configfile.settings['printer'].square_corner_velocity|float %}
	
	SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} MINIMUM_CRUISE_RATIO={MINIMUM_RATIO} SQUARE_CORNER_VELOCITY={SQUARE_VELOCITY}
	
	
	{% set z = params.Z|default(100)|int %}
	{% set x_park = params.X|default(printer.toolhead.axis_minimum.x+5)|int %}
	{% set y_park = params.Y|default(printer.toolhead.axis_maximum.y-5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE
	M400
	M220 S100
	M221 S100
	G91
	M83
	G1 E-10.0 F1200
	TURN_OFF_HEATERS
	M107
	{% if (printer.gcode_move.position.z+5) < z %}
	G90
	G0 X{x_park} Y{y_park} Z{z+5} F6000
	{% endif %}
	{%if (printer.gcode_move.position.z+5) >= z %}
	{%if (printer.gcode_move.position.z+5) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z5 F300
	G90
	G0 X{x_park} Y{y_park} F6000
	{% else %}
	G90
	G0 X{x_park} Y{y_park} Z{printer.toolhead.axis_maximum.z} F6000
	{% endif %}
	{% endif %}
	M84

[gcode_macro SET_BED_TEMPERATURE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode = 
	{% if params.MINIMUM is defined and params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
	{% elif params.MINIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
	{% elif params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
	{% else %}
	RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
	{% endif %}

[gcode_macro Axis_Twist_Comp_Tune]
gcode = 
	CG28
	AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Z_Tilt_Adjust_Comp]
gcode = 
	CG28
	Z_TILT_ADJUST

[gcode_macro PID_Tune_EXTRUDER]
gcode = 
	{% set temperature = params.TEMPERATURE|default(210) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=extruder TARGET={temperature}
	SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode = 
	{% set temperature = params.TEMPERATURE|default(60) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
	SAVE_CONFIG

[gcode_macro Bed_Level_Screws_Tune]
gcode = 
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Z_Offset]
gcode = 
	CG28
	PROBE_CALIBRATE

[gcode_macro SPEED_TEST]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Speed Test Macro"
	CG28
	AUTO_SPEED

[gcode_macro Auto_Full_Bed_Level]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	Z_Tilt_Adjust_Comp
	BED_MESH_CALIBRATE

[auto_speed]
results_dir = ~/printer_data/config/SpeedTest

[temperature_sensor MKS_Robin_Nano]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[temperature_sensor Orangepi]
sensor_type = temperature_host
min_temp = 10
max_temp = 80

[temperature_sensor EBBCan]
sensor_type = temperature_mcu
sensor_mcu = EBBCan
min_temp = 10
max_temp = 100

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 0
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 0
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[virtual_sdcard]
path = ~/printer_data/gcodes

[output_pin relay]
pin = PA2
value = 1

[resonance_tester]
accel_chip = adxl345
probe_points = 
	100, 100, 20

[exclude_object]

[stepper_x]
step_pin = PE3
dir_pin = !PE2
enable_pin = !PE4
microsteps = 16
rotation_distance = 40
endstop_pin = !EBBCan: PB6
position_endstop = 0
position_max = 300
homing_speed = 50

[tmc2209 stepper_x]
uart_pin = PC7
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_x]
motor = us-17hs4401s

[motor_constants us-17hs4401s]
resistance = 1.50
inductance = 0.0028
holding_torque = 0.40
max_current = 1.50
steps_per_revolution = 200

[stepper_y]
step_pin = PE0
dir_pin = !PB9
enable_pin = !PE1
microsteps = 16
rotation_distance = 40
endstop_pin = !PA12
position_endstop = 300
position_max = 300
homing_speed = 50

[tmc2209 stepper_y]
uart_pin = PC13
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_y]
motor = us-17hs4401s

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_min = -5
position_max = 340

[tmc2209 stepper_z]
uart_pin = PB13
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z]
motor = 42shdc3030z-17b18b

[stepper_z1]
step_pin = PA6
dir_pin = !PA1
enable_pin = !PA3
microsteps = 16
rotation_distance = 8

[tmc2209 stepper_z1]
uart_pin = PB14
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z1]
motor = 42shdc3030z-17b18b

[motor_constants 42shdc3030z-17b18b]
resistance = 1.65
inductance = 0.0028
holding_torque = 0.50
max_current = 1.68
steps_per_revolution = 200

[heater_bed]
heater_pin = PA0
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
min_temp = 0
max_temp = 130
control = pid
pid_kp = 70.573
pid_ki = 1.245
pid_kd = 1000.370

[verify_heater heater_bed]
max_error = 120
check_gain_time = 120
hysteresis = 20
heating_gain = 0.2

[safe_z_home]
home_xy_position = 160, 160
speed = 300
z_hop = 7
z_hop_speed = 25

[idle_timeout]
timeout = 1800

[z_tilt]
z_positions = 
	343, 160
	-13, 160
points = 
	20, 160
	290, 160
speed = 300
horizontal_move_z = 7
retries = 10
retry_tolerance = 0.09

[bed_screws]
screw1 = 24, 62
screw1_name = front left
screw2 = 24, 300
screw2_name = back left
screw3 = 293, 300
screw3_name = back right
screw4 = 293, 62
screw4_name = front right

[screws_tilt_adjust]
screw1 = 24, 62
screw1_name = front left
screw2 = 24,300
screw2_name = back left
screw3 = 263, 300
screw3_name = back right
screw4 = 263, 62
screw4_name = front right
horizontal_move_z = 5
speed = 250
screw_thread = CW-M4

[printer]
kinematics = corexy
max_velocity = 400
max_accel = 19840
max_z_velocity = 25
max_z_accel = 100
minimum_cruise_ratio = 0.5
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 1.0

[pause_resume]
recover_velocity = 50.0

[force_move]
enable_force_move = False

[input_shaper]
shaper_freq_x = 82.4
shaper_freq_y = 54.4
shaper_type = mzv

[display_status]

[bed_mesh 6]
version = 1
points = 
	-0.174620, -0.157120, -0.140870, -0.140870, -0.142120, -0.179620
	-0.128370, -0.140870, -0.137120, -0.134620, -0.137120, -0.165870
	-0.072120, -0.099620, -0.090870, -0.094620, -0.095870, -0.112120
	0.044130, -0.014620, -0.015870, -0.028370, -0.039620, -0.059620
	0.099130, 0.056630, 0.052880, 0.052880, 0.031630, -0.032120
	0.206630, 0.149130, 0.131630, 0.111630, 0.097880, 0.071630
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 15.0
max_x = 210.0
min_y = 21.0
max_y = 219.95

[bed_mesh default]
version = 1
points = 
	-0.039175, -0.019175, -0.009175, 0.003325, 0.010825, 0.003325, 0.012075, -0.009175, 0.019575
	-0.019175, -0.034175, -0.024175, -0.019175, -0.017925, -0.031675, -0.040425, -0.032925, -0.009175
	-0.012925, -0.040425, -0.025425, -0.021675, -0.005425, -0.011675, -0.030425, -0.022925, 0.003325
	-0.005425, -0.030425, -0.007925, -0.002925, 0.013325, 0.002075, -0.007925, -0.001675, 0.020825
	-0.005425, -0.015425, 0.002075, 0.005825, 0.018325, 0.024575, 0.014575, 0.027075, 0.054575
	-0.000425, -0.046675, -0.014175, -0.015425, -0.006675, -0.001675, -0.009175, 0.025825, 0.054575
	0.008325, -0.029175, -0.029175, -0.015425, -0.005425, -0.005425, -0.007925, 0.004575, 0.042075
	0.037075, -0.017925, -0.017925, -0.011675, -0.009175, -0.001675, 0.005825, 0.024575, 0.057075
	0.058325, 0.020825, 0.003325, -0.000425, 0.010825, 0.014575, 0.039575, 0.044575, 0.089575
x_count = 9
y_count = 9
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 20.0
max_x = 290.0
min_y = 45.0
max_y = 239.96000000000004
=======================
generated new fontManager
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
webhooks client 281472892579728: New connection
webhooks client 281472892579728: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
Loaded MCU 'mcu' 121 commands (v0.13.0-0-g61c0c8d2 / gcc: (15:12.2.rel1-1) 12.2.1 20221205 binutils: (2.40-2+18+b1) 2.40)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 INITIAL_PINS=!PC6,!PD13 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PB11,PB10 SERIAL_BAUD=250000 STATS_SUMSQ_BASE=256 STEPPER_STEP_BOTH_EDGE=1
mcu 'EBBCan': Starting serial connect
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
MCU error during connect
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/mcu.py", line 794, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 183, in connect_uart
    self._error("Unable to connect")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 131, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
            ^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/mcu.py", line 799, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'EBBCan': Unable to connect
mcu 'EBBCan': Unable to connect
Once the underlying issue is corrected, use the
"FIRMWARE_RESTART" command to reset the firmware, reload the
config, and restart the host software.
Error configuring printer

Build file /home/orangepi/klipper/klippy/../.config(1803): Thu Apr 17 20:58:25 2025
========= Last MCU build config =========
# CONFIG_LOW_LEVEL_OPTIONS is not set
CONFIG_MACH_AVR=y
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
# CONFIG_MACH_RPXXXX is not set
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
# CONFIG_MACH_LINUX is not set
# CONFIG_MACH_SIMU is not set
CONFIG_AVR_SELECT=y
CONFIG_BOARD_DIRECTORY="avr"
CONFIG_MACH_atmega2560=y
# CONFIG_MACH_atmega1280 is not set
# CONFIG_MACH_at90usb1286 is not set
# CONFIG_MACH_at90usb646 is not set
# CONFIG_MACH_atmega32u4 is not set
# CONFIG_MACH_atmega1284p is not set
# CONFIG_MACH_atmega644p is not set
# CONFIG_MACH_atmega328p is not set
# CONFIG_MACH_atmega328 is not set
# CONFIG_MACH_atmega168 is not set
CONFIG_MCU="atmega2560"
CONFIG_AVRDUDE_PROTOCOL="wiring"
CONFIG_CLOCK_FREQ=16000000
CONFIG_AVR_CLKPR=-1
CONFIG_AVR_STACK_SIZE=256
CONFIG_AVR_WATCHDOG=y
CONFIG_SERIAL=y
CONFIG_SERIAL_BAUD_U2X=y
CONFIG_SERIAL_PORT=0
CONFIG_SERIAL_BAUD=250000
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_WANT_ADC=y
CONFIG_WANT_SPI=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_WANT_I2C=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_HARD_PWM=y
CONFIG_WANT_BUTTONS=y
CONFIG_WANT_TMCUART=y
CONFIG_WANT_NEOPIXEL=y
CONFIG_WANT_PULSE_COUNTER=y
CONFIG_WANT_ST7920=y
CONFIG_WANT_HD44780=y
CONFIG_WANT_ADXL345=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_MPU9250=y
CONFIG_WANT_ICM20948=y
CONFIG_WANT_THERMOCOUPLE=y
CONFIG_WANT_HX71X=y
CONFIG_WANT_ADS1220=y
CONFIG_WANT_LDC1612=y
CONFIG_WANT_SENSOR_ANGLE=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_INLINE_STEPPER_HACK=y
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_STRICT_TIMING=y
=======================
No build file /home/orangepi/klipper/klippy/../out/klipper.dict
No build file /home/orangepi/klipper/klippy/../out/klipper.elf
Starting Klippy...
Args: ['/home/orangepi/klipper/klippy/klippy.py', '/home/orangepi/printer_data/config/printer.cfg', '-I', '/home/orangepi/printer_data/comms/klippy.serial', '-l', '/home/orangepi/printer_data/logs/klippy.log', '-a', '/home/orangepi/printer_data/comms/klippy.sock']
Git version: 'v0.13.0-33-g413ff19e-dirty'
Untracked files: klippy/extras/auto_speed.py, klippy/extras/autotune_tmc.py, klippy/extras/motor_constants.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, Nov 30 2024, 21:22:50) [GCC 12.2.0]'
Start printer at Thu Apr 17 20:47:56 2025 (1744922877.0 22.8)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00

[adxl345]
cs_pin = EBBCan: PB12
spi_software_sclk_pin = EBBCan: PB10
spi_software_mosi_pin = EBBCan: PB11
spi_software_miso_pin = EBBCan: PB2
axes_map = x,y,z

[extruder]
step_pin = EBBCan: PD0
dir_pin = EBBCan: PD1
enable_pin = !EBBCan: PD2
microsteps = 16
gear_ratio = 9.5:1
rotation_distance = 43.844
nozzle_diameter = 0.4
filament_diameter = 1.75
heater_pin = EBBCan: PB13
sensor_type = ATC Semitec 104GT-2
sensor_pin = EBBCan: PA3
min_temp = 0
max_temp = 300
min_extrude_temp = 150
pressure_advance = 0.05
pressure_advance_smooth_time = 0.040
max_extrude_cross_section = 5
control = pid
pid_kp = 37.351
pid_ki = 11.857
pid_kd = 29.414

[verify_heater extruder]
max_error = 200
check_gain_time = 35
hysteresis = 100
heating_gain = 1

[tmc2209 extruder]
uart_pin = EBBCan: PA15
interpolate = True
run_current = 0.75
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc extruder]
motor = bjy36d12-04v05

[motor_constants bjy36d12-04v05]
resistance = 2.0
inductance = 0.0012
holding_torque = 0.09
max_current = 0.8
steps_per_revolution = 200

[fan]
pin = EBBCan: PA0
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = EBBCan: PA1
max_power = 1.0
kick_start_time = 0.5
heater = extruder
heater_temp = 50.0

[filament_switch_sensor switch_sensor]
switch_pin = EBBCan:PB4

[shaketune]
result_folder = ~/printer_data/config/ShakeTune_results

[gcode_macro Probe_Deploy]
gcode = 
	SET_PIN PIN=probe_enable VALUE=1

[gcode_macro Probe_Stow]
gcode = 
	SET_PIN PIN=probe_enable VALUE=0

[output_pin probe_enable]
pin = EBBCan:PB9
value = 0

[probe]
pin = ^!EBBCan:PB8
deactivate_on_each_sample = False
x_offset = 0
y_offset = -38.0
speed = 5.0
samples = 2
samples_tolerance = 0.05
samples_tolerance_retries = 3
activate_gcode = 
	Probe_Deploy
	G4 P500
deactivate_gcode = 
	Probe_Stow
z_offset = 1.699

[bed_mesh]
speed = 300
horizontal_move_z = 4
mesh_min = 20, 45
mesh_max = 290,240
zero_reference_position = 160,160
fade_start = 0.4
fade_end = 10.0
probe_count = 9,9
algorithm = bicubic

[gcode_macro CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% else %}
	{% endif %}

[gcode_macro G29]
gcode = 
	M400
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE profile=6 mesh_min=15,21 mesh_max=210,220 probe_count=6 algorithm=bicubic
	M400
	G4 P2000
	G91
	G1 Z5 F300
	G90
	G28 Z
	G1 X117.5 Y100 F12000
	G1 Z0 F300

[gcode_macro PRINT_START]
gcode = 
	
	G92 E0
	G90
	
	
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
	{% set BED_MESH = params.BED_MESH|default('default')|string %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	
	SET_BED_TEMPERATURE TARGET={BED_TEMP}
	BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
	{% if BED_HEAT_SOAK_MINUTES > 0 %}
	RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
	G4 P{BED_HEAT_SOAK_MINUTES * 60000}
	{% endif %}
	
	CG28
	
	{% if BED_MESH == 'full' %}
	BED_MESH_CALIBRATE
	{% elif BED_MESH == 'adaptive' %}
	BED_MESH_CALIBRATE ADAPTIVE=1
	{% elif BED_MESH != 'none' %}
	BED_MESH_PROFILE LOAD={BED_MESH}
	{% endif %}
	Smart_Park
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
	LINE_PURGE
	G92 E0
	G1 Z2.0 F3000
	M117 Printing

[gcode_macro PRINT_END]
gcode = 
	
	
	M400
	TURN_OFF_HEATERS
	G92 E0
	G91
	G1 E-2 F2700
	G1 X5 Y5 F3000
	G1 E-2 Z0.2 F1600
	G1 Z4 F3000
	G90
	G1 X0 Y230
	M107
	M84
	
	M117
	END_TUNE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	PAUSE_TUNE
	{% set z = params.Z|default(30)|int %}
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	G91
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 Z{z} F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	{% if printer['pause_resume'].is_paused|int == 1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	G1 E80  F200
	G4 P2000
	G1 X20 F15000
	G1 X-20
	G1 X20
	G1 X-20
	G1 X20
	G1 X-20
	RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60
	G1 X-3 Y-3 F3000
	G1 Z{zhop * -1} F900
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M400
	BASE_RESUME
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	
	{% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
	{% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
	{% set MINIMUM_RATIO    = printer.configfile.settings['printer'].minimum_cruise_ratio|float %}
	{% set SQUARE_VELOCITY   = printer.configfile.settings['printer'].square_corner_velocity|float %}
	
	SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} MINIMUM_CRUISE_RATIO={MINIMUM_RATIO} SQUARE_CORNER_VELOCITY={SQUARE_VELOCITY}
	
	
	{% set z = params.Z|default(100)|int %}
	{% set x_park = params.X|default(printer.toolhead.axis_minimum.x+5)|int %}
	{% set y_park = params.Y|default(printer.toolhead.axis_maximum.y-5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE
	M400
	M220 S100
	M221 S100
	G91
	M83
	G1 E-10.0 F1200
	TURN_OFF_HEATERS
	M107
	{% if (printer.gcode_move.position.z+5) < z %}
	G90
	G0 X{x_park} Y{y_park} Z{z+5} F6000
	{% endif %}
	{%if (printer.gcode_move.position.z+5) >= z %}
	{%if (printer.gcode_move.position.z+5) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z5 F300
	G90
	G0 X{x_park} Y{y_park} F6000
	{% else %}
	G90
	G0 X{x_park} Y{y_park} Z{printer.toolhead.axis_maximum.z} F6000
	{% endif %}
	{% endif %}
	M84

[gcode_macro SET_BED_TEMPERATURE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode = 
	{% if params.MINIMUM is defined and params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
	{% elif params.MINIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
	{% elif params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
	{% else %}
	RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
	{% endif %}

[gcode_macro Axis_Twist_Comp_Tune]
gcode = 
	CG28
	AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Z_Tilt_Adjust_Comp]
gcode = 
	CG28
	Z_TILT_ADJUST

[gcode_macro PID_Tune_EXTRUDER]
gcode = 
	{% set temperature = params.TEMPERATURE|default(210) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=extruder TARGET={temperature}
	SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode = 
	{% set temperature = params.TEMPERATURE|default(60) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
	SAVE_CONFIG

[gcode_macro Bed_Level_Screws_Tune]
gcode = 
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Z_Offset]
gcode = 
	CG28
	PROBE_CALIBRATE

[gcode_macro SPEED_TEST]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Speed Test Macro"
	CG28
	AUTO_SPEED

[gcode_macro Auto_Full_Bed_Level]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	Z_Tilt_Adjust_Comp
	BED_MESH_CALIBRATE

[auto_speed]
results_dir = ~/printer_data/config/SpeedTest

[temperature_sensor MKS_Robin_Nano]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[temperature_sensor Orangepi]
sensor_type = temperature_host
min_temp = 10
max_temp = 80

[temperature_sensor EBBCan]
sensor_type = temperature_mcu
sensor_mcu = EBBCan
min_temp = 10
max_temp = 100

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 0
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 0
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[virtual_sdcard]
path = ~/printer_data/gcodes

[output_pin relay]
pin = PA2
value = 1

[resonance_tester]
accel_chip = adxl345
probe_points = 
	100, 100, 20

[exclude_object]

[stepper_x]
step_pin = PE3
dir_pin = !PE2
enable_pin = !PE4
microsteps = 16
rotation_distance = 40
endstop_pin = !EBBCan: PB6
position_endstop = 0
position_max = 300
homing_speed = 50

[tmc2209 stepper_x]
uart_pin = PC7
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_x]
motor = us-17hs4401s

[motor_constants us-17hs4401s]
resistance = 1.50
inductance = 0.0028
holding_torque = 0.40
max_current = 1.50
steps_per_revolution = 200

[stepper_y]
step_pin = PE0
dir_pin = !PB9
enable_pin = !PE1
microsteps = 16
rotation_distance = 40
endstop_pin = !PA12
position_endstop = 300
position_max = 300
homing_speed = 50

[tmc2209 stepper_y]
uart_pin = PC13
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_y]
motor = us-17hs4401s

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_min = -5
position_max = 340

[tmc2209 stepper_z]
uart_pin = PB13
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z]
motor = 42shdc3030z-17b18b

[stepper_z1]
step_pin = PA6
dir_pin = !PA1
enable_pin = !PA3
microsteps = 16
rotation_distance = 8

[tmc2209 stepper_z1]
uart_pin = PB14
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z1]
motor = 42shdc3030z-17b18b

[motor_constants 42shdc3030z-17b18b]
resistance = 1.65
inductance = 0.0028
holding_torque = 0.50
max_current = 1.68
steps_per_revolution = 200

[heater_bed]
heater_pin = PA0
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
min_temp = 0
max_temp = 130
control = pid
pid_kp = 70.573
pid_ki = 1.245
pid_kd = 1000.370

[verify_heater heater_bed]
max_error = 120
check_gain_time = 120
hysteresis = 20
heating_gain = 0.2

[safe_z_home]
home_xy_position = 160, 160
speed = 300
z_hop = 7
z_hop_speed = 25

[idle_timeout]
timeout = 1800

[z_tilt]
z_positions = 
	343, 160
	-13, 160
points = 
	20, 160
	290, 160
speed = 300
horizontal_move_z = 7
retries = 10
retry_tolerance = 0.09

[bed_screws]
screw1 = 24, 62
screw1_name = front left
screw2 = 24, 300
screw2_name = back left
screw3 = 293, 300
screw3_name = back right
screw4 = 293, 62
screw4_name = front right

[screws_tilt_adjust]
screw1 = 24, 62
screw1_name = front left
screw2 = 24,300
screw2_name = back left
screw3 = 263, 300
screw3_name = back right
screw4 = 263, 62
screw4_name = front right
horizontal_move_z = 5
speed = 250
screw_thread = CW-M4

[printer]
kinematics = corexy
max_velocity = 400
max_accel = 19840
max_z_velocity = 25
max_z_accel = 100
minimum_cruise_ratio = 0.5
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 1.0

[pause_resume]
recover_velocity = 50.0

[force_move]
enable_force_move = False

[input_shaper]
shaper_freq_x = 82.4
shaper_freq_y = 54.4
shaper_type = mzv

[display_status]

[bed_mesh 6]
version = 1
points = 
	-0.174620, -0.157120, -0.140870, -0.140870, -0.142120, -0.179620
	-0.128370, -0.140870, -0.137120, -0.134620, -0.137120, -0.165870
	-0.072120, -0.099620, -0.090870, -0.094620, -0.095870, -0.112120
	0.044130, -0.014620, -0.015870, -0.028370, -0.039620, -0.059620
	0.099130, 0.056630, 0.052880, 0.052880, 0.031630, -0.032120
	0.206630, 0.149130, 0.131630, 0.111630, 0.097880, 0.071630
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 15.0
max_x = 210.0
min_y = 21.0
max_y = 219.95

[bed_mesh default]
version = 1
points = 
	-0.039175, -0.019175, -0.009175, 0.003325, 0.010825, 0.003325, 0.012075, -0.009175, 0.019575
	-0.019175, -0.034175, -0.024175, -0.019175, -0.017925, -0.031675, -0.040425, -0.032925, -0.009175
	-0.012925, -0.040425, -0.025425, -0.021675, -0.005425, -0.011675, -0.030425, -0.022925, 0.003325
	-0.005425, -0.030425, -0.007925, -0.002925, 0.013325, 0.002075, -0.007925, -0.001675, 0.020825
	-0.005425, -0.015425, 0.002075, 0.005825, 0.018325, 0.024575, 0.014575, 0.027075, 0.054575
	-0.000425, -0.046675, -0.014175, -0.015425, -0.006675, -0.001675, -0.009175, 0.025825, 0.054575
	0.008325, -0.029175, -0.029175, -0.015425, -0.005425, -0.005425, -0.007925, 0.004575, 0.042075
	0.037075, -0.017925, -0.017925, -0.011675, -0.009175, -0.001675, 0.005825, 0.024575, 0.057075
	0.058325, 0.020825, 0.003325, -0.000425, 0.010825, 0.014575, 0.039575, 0.044575, 0.089575
x_count = 9
y_count = 9
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 20.0
max_x = 290.0
min_y = 45.0
max_y = 239.96000000000004
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
webhooks client 281472429542480: New connection
webhooks client 281472429542480: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'
MCU error during connect
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/mcu.py", line 794, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 183, in connect_uart
    self._error("Unable to connect")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 131, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
            ^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/mcu.py", line 799, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
mcu 'mcu': Unable to connect
Once the underlying issue is corrected, use the
"FIRMWARE_RESTART" command to reset the firmware, reload the
config, and restart the host software.
Error configuring printer

Build file /home/orangepi/klipper/klippy/../.config(1803): Thu Apr 17 20:58:25 2025
========= Last MCU build config =========
# CONFIG_LOW_LEVEL_OPTIONS is not set
CONFIG_MACH_AVR=y
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
# CONFIG_MACH_RPXXXX is not set
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
# CONFIG_MACH_LINUX is not set
# CONFIG_MACH_SIMU is not set
CONFIG_AVR_SELECT=y
CONFIG_BOARD_DIRECTORY="avr"
CONFIG_MACH_atmega2560=y
# CONFIG_MACH_atmega1280 is not set
# CONFIG_MACH_at90usb1286 is not set
# CONFIG_MACH_at90usb646 is not set
# CONFIG_MACH_atmega32u4 is not set
# CONFIG_MACH_atmega1284p is not set
# CONFIG_MACH_atmega644p is not set
# CONFIG_MACH_atmega328p is not set
# CONFIG_MACH_atmega328 is not set
# CONFIG_MACH_atmega168 is not set
CONFIG_MCU="atmega2560"
CONFIG_AVRDUDE_PROTOCOL="wiring"
CONFIG_CLOCK_FREQ=16000000
CONFIG_AVR_CLKPR=-1
CONFIG_AVR_STACK_SIZE=256
CONFIG_AVR_WATCHDOG=y
CONFIG_SERIAL=y
CONFIG_SERIAL_BAUD_U2X=y
CONFIG_SERIAL_PORT=0
CONFIG_SERIAL_BAUD=250000
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_WANT_ADC=y
CONFIG_WANT_SPI=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_WANT_I2C=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_HARD_PWM=y
CONFIG_WANT_BUTTONS=y
CONFIG_WANT_TMCUART=y
CONFIG_WANT_NEOPIXEL=y
CONFIG_WANT_PULSE_COUNTER=y
CONFIG_WANT_ST7920=y
CONFIG_WANT_HD44780=y
CONFIG_WANT_ADXL345=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_MPU9250=y
CONFIG_WANT_ICM20948=y
CONFIG_WANT_THERMOCOUPLE=y
CONFIG_WANT_HX71X=y
CONFIG_WANT_ADS1220=y
CONFIG_WANT_LDC1612=y
CONFIG_WANT_SENSOR_ANGLE=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_INLINE_STEPPER_HACK=y
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_STRICT_TIMING=y
=======================
No build file /home/orangepi/klipper/klippy/../out/klipper.dict
No build file /home/orangepi/klipper/klippy/../out/klipper.elf
Unable to issue reset command on MCU 'mcu'
Attempting MCU 'EBBCan' reset
Unhandled exception during post run
Traceback (most recent call last):
  File "/home/orangepi/klippy-env/lib/python3.11/site-packages/serial/serialposix.py", line 265, in open
    self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 193, in run
    self.send_event("klippy:firmware_restart")
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
            ^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/mcu.py", line 957, in _firmware_restart
    self._restart_arduino()
  File "/home/orangepi/klipper/klippy/mcu.py", line 917, in _restart_arduino
    serialhdl.arduino_reset(self._serialport, self._reactor)
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 380, in arduino_reset
    ser = serial.Serial(serialport, 2400, timeout=0, exclusive=True)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klippy-env/lib/python3.11/site-packages/serial/serialutil.py", line 240, in __init__
    self.open()
  File "/home/orangepi/klippy-env/lib/python3.11/site-packages/serial/serialposix.py", line 268, in open
    raise SerialException(msg.errno, "could not open port {}: {}".format(self._port, msg))
serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
Restarting printer
Start printer at Thu Apr 17 21:22:43 2025 (1744924963.2 166.5)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00

[adxl345]
cs_pin = EBBCan: PB12
spi_software_sclk_pin = EBBCan: PB10
spi_software_mosi_pin = EBBCan: PB11
spi_software_miso_pin = EBBCan: PB2
axes_map = x,y,z

[extruder]
step_pin = EBBCan: PD0
dir_pin = EBBCan: PD1
enable_pin = !EBBCan: PD2
microsteps = 16
gear_ratio = 9.5:1
rotation_distance = 43.844
nozzle_diameter = 0.4
filament_diameter = 1.75
heater_pin = EBBCan: PB13
sensor_type = ATC Semitec 104GT-2
sensor_pin = EBBCan: PA3
min_temp = 0
max_temp = 300
min_extrude_temp = 150
pressure_advance = 0.05
pressure_advance_smooth_time = 0.040
max_extrude_cross_section = 5
control = pid
pid_kp = 37.351
pid_ki = 11.857
pid_kd = 29.414

[verify_heater extruder]
max_error = 200
check_gain_time = 35
hysteresis = 100
heating_gain = 1

[tmc2209 extruder]
uart_pin = EBBCan: PA15
interpolate = True
run_current = 0.75
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc extruder]
motor = bjy36d12-04v05

[motor_constants bjy36d12-04v05]
resistance = 2.0
inductance = 0.0012
holding_torque = 0.09
max_current = 0.8
steps_per_revolution = 200

[fan]
pin = EBBCan: PA0
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = EBBCan: PA1
max_power = 1.0
kick_start_time = 0.5
heater = extruder
heater_temp = 50.0

[filament_switch_sensor switch_sensor]
switch_pin = EBBCan:PB4

[shaketune]
result_folder = ~/printer_data/config/ShakeTune_results

[gcode_macro Probe_Deploy]
gcode = 
	SET_PIN PIN=probe_enable VALUE=1

[gcode_macro Probe_Stow]
gcode = 
	SET_PIN PIN=probe_enable VALUE=0

[output_pin probe_enable]
pin = EBBCan:PB9
value = 0

[probe]
pin = ^!EBBCan:PB8
deactivate_on_each_sample = False
x_offset = 0
y_offset = -38.0
speed = 5.0
samples = 2
samples_tolerance = 0.05
samples_tolerance_retries = 3
activate_gcode = 
	Probe_Deploy
	G4 P500
deactivate_gcode = 
	Probe_Stow
z_offset = 1.699

[bed_mesh]
speed = 300
horizontal_move_z = 4
mesh_min = 20, 45
mesh_max = 290,240
zero_reference_position = 160,160
fade_start = 0.4
fade_end = 10.0
probe_count = 9,9
algorithm = bicubic

[gcode_macro CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% else %}
	{% endif %}

[gcode_macro G29]
gcode = 
	M400
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE profile=6 mesh_min=15,21 mesh_max=210,220 probe_count=6 algorithm=bicubic
	M400
	G4 P2000
	G91
	G1 Z5 F300
	G90
	G28 Z
	G1 X117.5 Y100 F12000
	G1 Z0 F300

[gcode_macro PRINT_START]
gcode = 
	
	G92 E0
	G90
	
	
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
	{% set BED_MESH = params.BED_MESH|default('default')|string %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	
	SET_BED_TEMPERATURE TARGET={BED_TEMP}
	BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
	{% if BED_HEAT_SOAK_MINUTES > 0 %}
	RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
	G4 P{BED_HEAT_SOAK_MINUTES * 60000}
	{% endif %}
	
	CG28
	
	{% if BED_MESH == 'full' %}
	BED_MESH_CALIBRATE
	{% elif BED_MESH == 'adaptive' %}
	BED_MESH_CALIBRATE ADAPTIVE=1
	{% elif BED_MESH != 'none' %}
	BED_MESH_PROFILE LOAD={BED_MESH}
	{% endif %}
	Smart_Park
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
	LINE_PURGE
	G92 E0
	G1 Z2.0 F3000
	M117 Printing

[gcode_macro PRINT_END]
gcode = 
	
	
	M400
	TURN_OFF_HEATERS
	G92 E0
	G91
	G1 E-2 F2700
	G1 X5 Y5 F3000
	G1 E-2 Z0.2 F1600
	G1 Z4 F3000
	G90
	G1 X0 Y230
	M107
	M84
	
	M117
	END_TUNE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	PAUSE_TUNE
	{% set z = params.Z|default(30)|int %}
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	G91
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 Z{z} F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	{% if printer['pause_resume'].is_paused|int == 1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	G1 E80  F200
	G4 P2000
	G1 X20 F15000
	G1 X-20
	G1 X20
	G1 X-20
	G1 X20
	G1 X-20
	RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60
	G1 X-3 Y-3 F3000
	G1 Z{zhop * -1} F900
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M400
	BASE_RESUME
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	
	{% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
	{% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
	{% set MINIMUM_RATIO    = printer.configfile.settings['printer'].minimum_cruise_ratio|float %}
	{% set SQUARE_VELOCITY   = printer.configfile.settings['printer'].square_corner_velocity|float %}
	
	SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} MINIMUM_CRUISE_RATIO={MINIMUM_RATIO} SQUARE_CORNER_VELOCITY={SQUARE_VELOCITY}
	
	
	{% set z = params.Z|default(100)|int %}
	{% set x_park = params.X|default(printer.toolhead.axis_minimum.x+5)|int %}
	{% set y_park = params.Y|default(printer.toolhead.axis_maximum.y-5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE
	M400
	M220 S100
	M221 S100
	G91
	M83
	G1 E-10.0 F1200
	TURN_OFF_HEATERS
	M107
	{% if (printer.gcode_move.position.z+5) < z %}
	G90
	G0 X{x_park} Y{y_park} Z{z+5} F6000
	{% endif %}
	{%if (printer.gcode_move.position.z+5) >= z %}
	{%if (printer.gcode_move.position.z+5) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z5 F300
	G90
	G0 X{x_park} Y{y_park} F6000
	{% else %}
	G90
	G0 X{x_park} Y{y_park} Z{printer.toolhead.axis_maximum.z} F6000
	{% endif %}
	{% endif %}
	M84

[gcode_macro SET_BED_TEMPERATURE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode = 
	{% if params.MINIMUM is defined and params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
	{% elif params.MINIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
	{% elif params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
	{% else %}
	RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
	{% endif %}

[gcode_macro Axis_Twist_Comp_Tune]
gcode = 
	CG28
	AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Z_Tilt_Adjust_Comp]
gcode = 
	CG28
	Z_TILT_ADJUST

[gcode_macro PID_Tune_EXTRUDER]
gcode = 
	{% set temperature = params.TEMPERATURE|default(210) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=extruder TARGET={temperature}
	SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode = 
	{% set temperature = params.TEMPERATURE|default(60) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
	SAVE_CONFIG

[gcode_macro Bed_Level_Screws_Tune]
gcode = 
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Z_Offset]
gcode = 
	CG28
	PROBE_CALIBRATE

[gcode_macro SPEED_TEST]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Speed Test Macro"
	CG28
	AUTO_SPEED

[gcode_macro Auto_Full_Bed_Level]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	Z_Tilt_Adjust_Comp
	BED_MESH_CALIBRATE

[auto_speed]
results_dir = ~/printer_data/config/SpeedTest

[temperature_sensor MKS_Robin_Nano]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[temperature_sensor Orangepi]
sensor_type = temperature_host
min_temp = 10
max_temp = 80

[temperature_sensor EBBCan]
sensor_type = temperature_mcu
sensor_mcu = EBBCan
min_temp = 10
max_temp = 100

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 0
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 0
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[mcu]
serial = /dev/ttyS0
restart_method = command

[virtual_sdcard]
path = ~/printer_data/gcodes

[output_pin relay]
pin = PA2
value = 1

[resonance_tester]
accel_chip = adxl345
probe_points = 
	100, 100, 20

[exclude_object]

[stepper_x]
step_pin = PE3
dir_pin = !PE2
enable_pin = !PE4
microsteps = 16
rotation_distance = 40
endstop_pin = !EBBCan: PB6
position_endstop = 0
position_max = 300
homing_speed = 50

[tmc2209 stepper_x]
uart_pin = PC7
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_x]
motor = us-17hs4401s

[motor_constants us-17hs4401s]
resistance = 1.50
inductance = 0.0028
holding_torque = 0.40
max_current = 1.50
steps_per_revolution = 200

[stepper_y]
step_pin = PE0
dir_pin = !PB9
enable_pin = !PE1
microsteps = 16
rotation_distance = 40
endstop_pin = !PA12
position_endstop = 300
position_max = 300
homing_speed = 50

[tmc2209 stepper_y]
uart_pin = PC13
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_y]
motor = us-17hs4401s

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_min = -5
position_max = 340

[tmc2209 stepper_z]
uart_pin = PB13
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z]
motor = 42shdc3030z-17b18b

[stepper_z1]
step_pin = PA6
dir_pin = !PA1
enable_pin = !PA3
microsteps = 16
rotation_distance = 8

[tmc2209 stepper_z1]
uart_pin = PB14
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z1]
motor = 42shdc3030z-17b18b

[motor_constants 42shdc3030z-17b18b]
resistance = 1.65
inductance = 0.0028
holding_torque = 0.50
max_current = 1.68
steps_per_revolution = 200

[heater_bed]
heater_pin = PA0
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
min_temp = 0
max_temp = 130
control = pid
pid_kp = 70.573
pid_ki = 1.245
pid_kd = 1000.370

[verify_heater heater_bed]
max_error = 120
check_gain_time = 120
hysteresis = 20
heating_gain = 0.2

[safe_z_home]
home_xy_position = 160, 160
speed = 300
z_hop = 7
z_hop_speed = 25

[idle_timeout]
timeout = 1800

[z_tilt]
z_positions = 
	343, 160
	-13, 160
points = 
	20, 160
	290, 160
speed = 300
horizontal_move_z = 7
retries = 10
retry_tolerance = 0.09

[bed_screws]
screw1 = 24, 62
screw1_name = front left
screw2 = 24, 300
screw2_name = back left
screw3 = 293, 300
screw3_name = back right
screw4 = 293, 62
screw4_name = front right

[screws_tilt_adjust]
screw1 = 24, 62
screw1_name = front left
screw2 = 24,300
screw2_name = back left
screw3 = 263, 300
screw3_name = back right
screw4 = 263, 62
screw4_name = front right
horizontal_move_z = 5
speed = 250
screw_thread = CW-M4

[printer]
kinematics = corexy
max_velocity = 400
max_accel = 19840
max_z_velocity = 25
max_z_accel = 100
minimum_cruise_ratio = 0.5
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 1.0

[pause_resume]
recover_velocity = 50.0

[force_move]
enable_force_move = False

[input_shaper]
shaper_freq_x = 82.4
shaper_freq_y = 54.4
shaper_type = mzv

[display_status]

[bed_mesh 6]
version = 1
points = 
	-0.174620, -0.157120, -0.140870, -0.140870, -0.142120, -0.179620
	-0.128370, -0.140870, -0.137120, -0.134620, -0.137120, -0.165870
	-0.072120, -0.099620, -0.090870, -0.094620, -0.095870, -0.112120
	0.044130, -0.014620, -0.015870, -0.028370, -0.039620, -0.059620
	0.099130, 0.056630, 0.052880, 0.052880, 0.031630, -0.032120
	0.206630, 0.149130, 0.131630, 0.111630, 0.097880, 0.071630
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 15.0
max_x = 210.0
min_y = 21.0
max_y = 219.95

[bed_mesh default]
version = 1
points = 
	-0.039175, -0.019175, -0.009175, 0.003325, 0.010825, 0.003325, 0.012075, -0.009175, 0.019575
	-0.019175, -0.034175, -0.024175, -0.019175, -0.017925, -0.031675, -0.040425, -0.032925, -0.009175
	-0.012925, -0.040425, -0.025425, -0.021675, -0.005425, -0.011675, -0.030425, -0.022925, 0.003325
	-0.005425, -0.030425, -0.007925, -0.002925, 0.013325, 0.002075, -0.007925, -0.001675, 0.020825
	-0.005425, -0.015425, 0.002075, 0.005825, 0.018325, 0.024575, 0.014575, 0.027075, 0.054575
	-0.000425, -0.046675, -0.014175, -0.015425, -0.006675, -0.001675, -0.009175, 0.025825, 0.054575
	0.008325, -0.029175, -0.029175, -0.015425, -0.005425, -0.005425, -0.007925, 0.004575, 0.042075
	0.037075, -0.017925, -0.017925, -0.011675, -0.009175, -0.001675, 0.005825, 0.024575, 0.057075
	0.058325, 0.020825, 0.003325, -0.000425, 0.010825, 0.014575, 0.039575, 0.044575, 0.089575
x_count = 9
y_count = 9
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 20.0
max_x = 290.0
min_y = 45.0
max_y = 239.96000000000004
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
mcu 'mcu': Timeout on connect
MCU error during connect
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/mcu.py", line 794, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 183, in connect_uart
    self._error("Unable to connect")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 131, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
            ^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/mcu.py", line 799, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
mcu 'mcu': Unable to connect
Once the underlying issue is corrected, use the
"FIRMWARE_RESTART" command to reset the firmware, reload the
config, and restart the host software.
Error configuring printer

Build file /home/orangepi/klipper/klippy/../.config(1803): Thu Apr 17 20:58:25 2025
========= Last MCU build config =========
# CONFIG_LOW_LEVEL_OPTIONS is not set
CONFIG_MACH_AVR=y
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
# CONFIG_MACH_RPXXXX is not set
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
# CONFIG_MACH_LINUX is not set
# CONFIG_MACH_SIMU is not set
CONFIG_AVR_SELECT=y
CONFIG_BOARD_DIRECTORY="avr"
CONFIG_MACH_atmega2560=y
# CONFIG_MACH_atmega1280 is not set
# CONFIG_MACH_at90usb1286 is not set
# CONFIG_MACH_at90usb646 is not set
# CONFIG_MACH_atmega32u4 is not set
# CONFIG_MACH_atmega1284p is not set
# CONFIG_MACH_atmega644p is not set
# CONFIG_MACH_atmega328p is not set
# CONFIG_MACH_atmega328 is not set
# CONFIG_MACH_atmega168 is not set
CONFIG_MCU="atmega2560"
CONFIG_AVRDUDE_PROTOCOL="wiring"
CONFIG_CLOCK_FREQ=16000000
CONFIG_AVR_CLKPR=-1
CONFIG_AVR_STACK_SIZE=256
CONFIG_AVR_WATCHDOG=y
CONFIG_SERIAL=y
CONFIG_SERIAL_BAUD_U2X=y
CONFIG_SERIAL_PORT=0
CONFIG_SERIAL_BAUD=250000
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_WANT_ADC=y
CONFIG_WANT_SPI=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_WANT_I2C=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_HARD_PWM=y
CONFIG_WANT_BUTTONS=y
CONFIG_WANT_TMCUART=y
CONFIG_WANT_NEOPIXEL=y
CONFIG_WANT_PULSE_COUNTER=y
CONFIG_WANT_ST7920=y
CONFIG_WANT_HD44780=y
CONFIG_WANT_ADXL345=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_MPU9250=y
CONFIG_WANT_ICM20948=y
CONFIG_WANT_THERMOCOUPLE=y
CONFIG_WANT_HX71X=y
CONFIG_WANT_ADS1220=y
CONFIG_WANT_LDC1612=y
CONFIG_WANT_SENSOR_ANGLE=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_INLINE_STEPPER_HACK=y
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_STRICT_TIMING=y
=======================
No build file /home/orangepi/klipper/klippy/../out/klipper.dict
No build file /home/orangepi/klipper/klippy/../out/klipper.elf
mcu 'mcu': Wait for identify_response
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Serial connection closed
Starting Klippy...
Args: ['/home/orangepi/klipper/klippy/klippy.py', '/home/orangepi/printer_data/config/printer.cfg', '-I', '/home/orangepi/printer_data/comms/klippy.serial', '-l', '/home/orangepi/printer_data/logs/klippy.log', '-a', '/home/orangepi/printer_data/comms/klippy.sock']
Git version: 'v0.13.0-33-g413ff19e-dirty'
Untracked files: klippy/extras/auto_speed.py, klippy/extras/autotune_tmc.py, klippy/extras/motor_constants.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, Nov 30 2024, 21:22:50) [GCC 12.2.0]'
Start printer at Thu Apr 17 21:24:44 2025 (1744925084.2 22.7)
===== Config file =====
[mcu EBBCan]
serial = /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00

[adxl345]
cs_pin = EBBCan: PB12
spi_software_sclk_pin = EBBCan: PB10
spi_software_mosi_pin = EBBCan: PB11
spi_software_miso_pin = EBBCan: PB2
axes_map = x,y,z

[extruder]
step_pin = EBBCan: PD0
dir_pin = EBBCan: PD1
enable_pin = !EBBCan: PD2
microsteps = 16
gear_ratio = 9.5:1
rotation_distance = 43.844
nozzle_diameter = 0.4
filament_diameter = 1.75
heater_pin = EBBCan: PB13
sensor_type = ATC Semitec 104GT-2
sensor_pin = EBBCan: PA3
min_temp = 0
max_temp = 300
min_extrude_temp = 150
pressure_advance = 0.05
pressure_advance_smooth_time = 0.040
max_extrude_cross_section = 5
control = pid
pid_kp = 37.351
pid_ki = 11.857
pid_kd = 29.414

[verify_heater extruder]
max_error = 200
check_gain_time = 35
hysteresis = 100
heating_gain = 1

[tmc2209 extruder]
uart_pin = EBBCan: PA15
interpolate = True
run_current = 0.75
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc extruder]
motor = bjy36d12-04v05

[motor_constants bjy36d12-04v05]
resistance = 2.0
inductance = 0.0012
holding_torque = 0.09
max_current = 0.8
steps_per_revolution = 200

[fan]
pin = EBBCan: PA0
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend_fan]
pin = EBBCan: PA1
max_power = 1.0
kick_start_time = 0.5
heater = extruder
heater_temp = 50.0

[filament_switch_sensor switch_sensor]
switch_pin = EBBCan:PB4

[shaketune]
result_folder = ~/printer_data/config/ShakeTune_results

[gcode_macro Probe_Deploy]
gcode = 
	SET_PIN PIN=probe_enable VALUE=1

[gcode_macro Probe_Stow]
gcode = 
	SET_PIN PIN=probe_enable VALUE=0

[output_pin probe_enable]
pin = EBBCan:PB9
value = 0

[probe]
pin = ^!EBBCan:PB8
deactivate_on_each_sample = False
x_offset = 0
y_offset = -38.0
speed = 5.0
samples = 2
samples_tolerance = 0.05
samples_tolerance_retries = 3
activate_gcode = 
	Probe_Deploy
	G4 P500
deactivate_gcode = 
	Probe_Stow
z_offset = 1.699

[bed_mesh]
speed = 300
horizontal_move_z = 4
mesh_min = 20, 45
mesh_max = 290,240
zero_reference_position = 160,160
fade_start = 0.4
fade_end = 10.0
probe_count = 9,9
algorithm = bicubic

[gcode_macro CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% else %}
	{% endif %}

[gcode_macro G29]
gcode = 
	M400
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE profile=6 mesh_min=15,21 mesh_max=210,220 probe_count=6 algorithm=bicubic
	M400
	G4 P2000
	G91
	G1 Z5 F300
	G90
	G28 Z
	G1 X117.5 Y100 F12000
	G1 Z0 F300

[gcode_macro PRINT_START]
gcode = 
	
	G92 E0
	G90
	
	
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
	{% set BED_MESH = params.BED_MESH|default('default')|string %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	
	SET_BED_TEMPERATURE TARGET={BED_TEMP}
	BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
	{% if BED_HEAT_SOAK_MINUTES > 0 %}
	RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
	G4 P{BED_HEAT_SOAK_MINUTES * 60000}
	{% endif %}
	
	CG28
	
	{% if BED_MESH == 'full' %}
	BED_MESH_CALIBRATE
	{% elif BED_MESH == 'adaptive' %}
	BED_MESH_CALIBRATE ADAPTIVE=1
	{% elif BED_MESH != 'none' %}
	BED_MESH_PROFILE LOAD={BED_MESH}
	{% endif %}
	Smart_Park
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
	LINE_PURGE
	G92 E0
	G1 Z2.0 F3000
	M117 Printing

[gcode_macro PRINT_END]
gcode = 
	
	
	M400
	TURN_OFF_HEATERS
	G92 E0
	G91
	G1 E-2 F2700
	G1 X5 Y5 F3000
	G1 E-2 Z0.2 F1600
	G1 Z4 F3000
	G90
	G1 X0 Y230
	M107
	M84
	
	M117
	END_TUNE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	PAUSE_TUNE
	{% set z = params.Z|default(30)|int %}
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	G91
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 Z{z} F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	{% if printer['pause_resume'].is_paused|int == 1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	G1 E80  F200
	G4 P2000
	G1 X20 F15000
	G1 X-20
	G1 X20
	G1 X-20
	G1 X20
	G1 X-20
	RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60
	G1 X-3 Y-3 F3000
	G1 Z{zhop * -1} F900
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M400
	BASE_RESUME
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	
	{% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
	{% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
	{% set MINIMUM_RATIO    = printer.configfile.settings['printer'].minimum_cruise_ratio|float %}
	{% set SQUARE_VELOCITY   = printer.configfile.settings['printer'].square_corner_velocity|float %}
	
	SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} MINIMUM_CRUISE_RATIO={MINIMUM_RATIO} SQUARE_CORNER_VELOCITY={SQUARE_VELOCITY}
	
	
	{% set z = params.Z|default(100)|int %}
	{% set x_park = params.X|default(printer.toolhead.axis_minimum.x+5)|int %}
	{% set y_park = params.Y|default(printer.toolhead.axis_maximum.y-5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE
	M400
	M220 S100
	M221 S100
	G91
	M83
	G1 E-10.0 F1200
	TURN_OFF_HEATERS
	M107
	{% if (printer.gcode_move.position.z+5) < z %}
	G90
	G0 X{x_park} Y{y_park} Z{z+5} F6000
	{% endif %}
	{%if (printer.gcode_move.position.z+5) >= z %}
	{%if (printer.gcode_move.position.z+5) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z5 F300
	G90
	G0 X{x_park} Y{y_park} F6000
	{% else %}
	G90
	G0 X{x_park} Y{y_park} Z{printer.toolhead.axis_maximum.z} F6000
	{% endif %}
	{% endif %}
	M84

[gcode_macro SET_BED_TEMPERATURE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode = 
	{% if params.MINIMUM is defined and params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
	{% elif params.MINIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
	{% elif params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
	{% else %}
	RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
	{% endif %}

[gcode_macro Axis_Twist_Comp_Tune]
gcode = 
	CG28
	AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Z_Tilt_Adjust_Comp]
gcode = 
	CG28
	Z_TILT_ADJUST

[gcode_macro PID_Tune_EXTRUDER]
gcode = 
	{% set temperature = params.TEMPERATURE|default(210) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=extruder TARGET={temperature}
	SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode = 
	{% set temperature = params.TEMPERATURE|default(60) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
	SAVE_CONFIG

[gcode_macro Bed_Level_Screws_Tune]
gcode = 
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Z_Offset]
gcode = 
	CG28
	PROBE_CALIBRATE

[gcode_macro SPEED_TEST]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Speed Test Macro"
	CG28
	AUTO_SPEED

[gcode_macro Auto_Full_Bed_Level]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	Z_Tilt_Adjust_Comp
	BED_MESH_CALIBRATE

[auto_speed]
results_dir = ~/printer_data/config/SpeedTest

[temperature_sensor MKS_Robin_Nano]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[temperature_sensor Orangepi]
sensor_type = temperature_host
min_temp = 10
max_temp = 80

[temperature_sensor EBBCan]
sensor_type = temperature_mcu
sensor_mcu = EBBCan
min_temp = 10
max_temp = 100

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 0
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 0
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[virtual_sdcard]
path = ~/printer_data/gcodes

[output_pin relay]
pin = PA2
value = 1

[resonance_tester]
accel_chip = adxl345
probe_points = 
	100, 100, 20

[exclude_object]

[stepper_x]
step_pin = PE3
dir_pin = !PE2
enable_pin = !PE4
microsteps = 16
rotation_distance = 40
endstop_pin = !EBBCan: PB6
position_endstop = 0
position_max = 300
homing_speed = 50

[tmc2209 stepper_x]
uart_pin = PC7
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_x]
motor = us-17hs4401s

[motor_constants us-17hs4401s]
resistance = 1.50
inductance = 0.0028
holding_torque = 0.40
max_current = 1.50
steps_per_revolution = 200

[stepper_y]
step_pin = PE0
dir_pin = !PB9
enable_pin = !PE1
microsteps = 16
rotation_distance = 40
endstop_pin = !PA12
position_endstop = 300
position_max = 300
homing_speed = 50

[tmc2209 stepper_y]
uart_pin = PC13
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_y]
motor = us-17hs4401s

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_min = -5
position_max = 340

[tmc2209 stepper_z]
uart_pin = PB13
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z]
motor = 42shdc3030z-17b18b

[stepper_z1]
step_pin = PA6
dir_pin = !PA1
enable_pin = !PA3
microsteps = 16
rotation_distance = 8

[tmc2209 stepper_z1]
uart_pin = PB14
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z1]
motor = 42shdc3030z-17b18b

[motor_constants 42shdc3030z-17b18b]
resistance = 1.65
inductance = 0.0028
holding_torque = 0.50
max_current = 1.68
steps_per_revolution = 200

[heater_bed]
heater_pin = PA0
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
min_temp = 0
max_temp = 130
control = pid
pid_kp = 70.573
pid_ki = 1.245
pid_kd = 1000.370

[verify_heater heater_bed]
max_error = 120
check_gain_time = 120
hysteresis = 20
heating_gain = 0.2

[safe_z_home]
home_xy_position = 160, 160
speed = 300
z_hop = 7
z_hop_speed = 25

[idle_timeout]
timeout = 1800

[z_tilt]
z_positions = 
	343, 160
	-13, 160
points = 
	20, 160
	290, 160
speed = 300
horizontal_move_z = 7
retries = 10
retry_tolerance = 0.09

[bed_screws]
screw1 = 24, 62
screw1_name = front left
screw2 = 24, 300
screw2_name = back left
screw3 = 293, 300
screw3_name = back right
screw4 = 293, 62
screw4_name = front right

[screws_tilt_adjust]
screw1 = 24, 62
screw1_name = front left
screw2 = 24,300
screw2_name = back left
screw3 = 263, 300
screw3_name = back right
screw4 = 263, 62
screw4_name = front right
horizontal_move_z = 5
speed = 250
screw_thread = CW-M4

[printer]
kinematics = corexy
max_velocity = 400
max_accel = 19840
max_z_velocity = 25
max_z_accel = 100
minimum_cruise_ratio = 0.5
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 1.0

[pause_resume]
recover_velocity = 50.0

[force_move]
enable_force_move = False

[input_shaper]
shaper_freq_x = 82.4
shaper_freq_y = 54.4
shaper_type = mzv

[display_status]

[bed_mesh 6]
version = 1
points = 
	-0.174620, -0.157120, -0.140870, -0.140870, -0.142120, -0.179620
	-0.128370, -0.140870, -0.137120, -0.134620, -0.137120, -0.165870
	-0.072120, -0.099620, -0.090870, -0.094620, -0.095870, -0.112120
	0.044130, -0.014620, -0.015870, -0.028370, -0.039620, -0.059620
	0.099130, 0.056630, 0.052880, 0.052880, 0.031630, -0.032120
	0.206630, 0.149130, 0.131630, 0.111630, 0.097880, 0.071630
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 15.0
max_x = 210.0
min_y = 21.0
max_y = 219.95

[bed_mesh default]
version = 1
points = 
	-0.039175, -0.019175, -0.009175, 0.003325, 0.010825, 0.003325, 0.012075, -0.009175, 0.019575
	-0.019175, -0.034175, -0.024175, -0.019175, -0.017925, -0.031675, -0.040425, -0.032925, -0.009175
	-0.012925, -0.040425, -0.025425, -0.021675, -0.005425, -0.011675, -0.030425, -0.022925, 0.003325
	-0.005425, -0.030425, -0.007925, -0.002925, 0.013325, 0.002075, -0.007925, -0.001675, 0.020825
	-0.005425, -0.015425, 0.002075, 0.005825, 0.018325, 0.024575, 0.014575, 0.027075, 0.054575
	-0.000425, -0.046675, -0.014175, -0.015425, -0.006675, -0.001675, -0.009175, 0.025825, 0.054575
	0.008325, -0.029175, -0.029175, -0.015425, -0.005425, -0.005425, -0.007925, 0.004575, 0.042075
	0.037075, -0.017925, -0.017925, -0.011675, -0.009175, -0.001675, 0.005825, 0.024575, 0.057075
	0.058325, 0.020825, 0.003325, -0.000425, 0.010825, 0.014575, 0.039575, 0.044575, 0.089575
x_count = 9
y_count = 9
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 20.0
max_x = 290.0
min_y = 45.0
max_y = 239.96000000000004
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
webhooks client 281472534936720: New connection
webhooks client 281472534936720: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
mcu 'mcu': got {'count': 137, 'sum': 239967, 'sumsq': 2288429, '#name': 'stats', '#sent_time': 36.860141017, '#receive_time': 36.868488683}
Loaded MCU 'mcu' 121 commands (v0.13.0-33-g413ff19e / gcc: (15:12.2.rel1-1) 12.2.1 20221205 binutils: (2.40-2+18+b1) 2.40)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 INITIAL_PINS=!PC6,!PD13 MCU=stm32f103xe PWM_MAX=257 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PB11,PB10 SERIAL_BAUD=250000 STATS_SUMSQ_BASE=256 STEPPER_STEP_BOTH_EDGE=1
mcu 'EBBCan': Starting serial connect
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
mcu 'EBBCan': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
Attempting MCU 'mcu' reset command
Attempting MCU 'EBBCan' reset
Unhandled exception during post run
Traceback (most recent call last):
  File "/home/orangepi/klippy-env/lib/python3.11/site-packages/serial/serialposix.py", line 265, in open
    self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 193, in run
    self.send_event("klippy:firmware_restart")
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/klippy.py", line 223, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
            ^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/mcu.py", line 957, in _firmware_restart
    self._restart_arduino()
  File "/home/orangepi/klipper/klippy/mcu.py", line 917, in _restart_arduino
    serialhdl.arduino_reset(self._serialport, self._reactor)
  File "/home/orangepi/klipper/klippy/serialhdl.py", line 380, in arduino_reset
    ser = serial.Serial(serialport, 2400, timeout=0, exclusive=True)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klippy-env/lib/python3.11/site-packages/serial/serialutil.py", line 240, in __init__
    self.open()
  File "/home/orangepi/klippy-env/lib/python3.11/site-packages/serial/serialposix.py", line 268, in open
    raise SerialException(msg.errno, "could not open port {}: {}".format(self._port, msg))
serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00'
Restarting printer
Start printer at Thu Apr 17 21:26:31 2025 (1744925191.9 116.2)
===== Config file =====
[gcode_macro CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% else %}
	{% endif %}

[gcode_macro G29]
gcode = 
	M400
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE profile=6 mesh_min=15,21 mesh_max=210,220 probe_count=6 algorithm=bicubic
	M400
	G4 P2000
	G91
	G1 Z5 F300
	G90
	G28 Z
	G1 X117.5 Y100 F12000
	G1 Z0 F300

[gcode_macro PRINT_START]
gcode = 
	
	G92 E0
	G90
	
	
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
	{% set BED_MESH = params.BED_MESH|default('default')|string %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	
	SET_BED_TEMPERATURE TARGET={BED_TEMP}
	BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
	{% if BED_HEAT_SOAK_MINUTES > 0 %}
	RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
	G4 P{BED_HEAT_SOAK_MINUTES * 60000}
	{% endif %}
	
	CG28
	
	{% if BED_MESH == 'full' %}
	BED_MESH_CALIBRATE
	{% elif BED_MESH == 'adaptive' %}
	BED_MESH_CALIBRATE ADAPTIVE=1
	{% elif BED_MESH != 'none' %}
	BED_MESH_PROFILE LOAD={BED_MESH}
	{% endif %}
	Smart_Park
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
	LINE_PURGE
	G92 E0
	G1 Z2.0 F3000
	M117 Printing

[gcode_macro PRINT_END]
gcode = 
	
	
	M400
	TURN_OFF_HEATERS
	G92 E0
	G91
	G1 E-2 F2700
	G1 X5 Y5 F3000
	G1 E-2 Z0.2 F1600
	G1 Z4 F3000
	G90
	G1 X0 Y230
	M107
	M84
	
	M117
	END_TUNE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	PAUSE_TUNE
	{% set z = params.Z|default(30)|int %}
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	G91
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 Z{z} F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	{% if printer['pause_resume'].is_paused|int == 1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	G1 E80  F200
	G4 P2000
	G1 X20 F15000
	G1 X-20
	G1 X20
	G1 X-20
	G1 X20
	G1 X-20
	RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60
	G1 X-3 Y-3 F3000
	G1 Z{zhop * -1} F900
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M400
	BASE_RESUME
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	
	{% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
	{% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
	{% set MINIMUM_RATIO    = printer.configfile.settings['printer'].minimum_cruise_ratio|float %}
	{% set SQUARE_VELOCITY   = printer.configfile.settings['printer'].square_corner_velocity|float %}
	
	SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} MINIMUM_CRUISE_RATIO={MINIMUM_RATIO} SQUARE_CORNER_VELOCITY={SQUARE_VELOCITY}
	
	
	{% set z = params.Z|default(100)|int %}
	{% set x_park = params.X|default(printer.toolhead.axis_minimum.x+5)|int %}
	{% set y_park = params.Y|default(printer.toolhead.axis_maximum.y-5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE
	M400
	M220 S100
	M221 S100
	G91
	M83
	G1 E-10.0 F1200
	TURN_OFF_HEATERS
	M107
	{% if (printer.gcode_move.position.z+5) < z %}
	G90
	G0 X{x_park} Y{y_park} Z{z+5} F6000
	{% endif %}
	{%if (printer.gcode_move.position.z+5) >= z %}
	{%if (printer.gcode_move.position.z+5) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z5 F300
	G90
	G0 X{x_park} Y{y_park} F6000
	{% else %}
	G90
	G0 X{x_park} Y{y_park} Z{printer.toolhead.axis_maximum.z} F6000
	{% endif %}
	{% endif %}
	M84

[gcode_macro SET_BED_TEMPERATURE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode = 
	{% if params.MINIMUM is defined and params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
	{% elif params.MINIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
	{% elif params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
	{% else %}
	RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
	{% endif %}

[gcode_macro Axis_Twist_Comp_Tune]
gcode = 
	CG28
	AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Z_Tilt_Adjust_Comp]
gcode = 
	CG28
	Z_TILT_ADJUST

[gcode_macro PID_Tune_EXTRUDER]
gcode = 
	{% set temperature = params.TEMPERATURE|default(210) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=extruder TARGET={temperature}
	SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode = 
	{% set temperature = params.TEMPERATURE|default(60) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
	SAVE_CONFIG

[gcode_macro Bed_Level_Screws_Tune]
gcode = 
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Z_Offset]
gcode = 
	CG28
	PROBE_CALIBRATE

[gcode_macro SPEED_TEST]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Speed Test Macro"
	CG28
	AUTO_SPEED

[gcode_macro Auto_Full_Bed_Level]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	Z_Tilt_Adjust_Comp
	BED_MESH_CALIBRATE

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[virtual_sdcard]
path = ~/printer_data/gcodes

[output_pin relay]
pin = PA2
value = 1

[resonance_tester]
accel_chip = adxl345
probe_points = 
	100, 100, 20

[adxl345]

[auto_speed]

[exclude_object]

[probe]
z_offset = 1.699

[extruder]
control = pid
pid_kp = 37.351
pid_ki = 11.857
pid_kd = 29.414

[stepper_x]
step_pin = PE3
dir_pin = !PE2
enable_pin = !PE4
microsteps = 16
rotation_distance = 40
endstop_pin = !EBBCan: PB6
position_endstop = 0
position_max = 300
homing_speed = 50

[tmc2209 stepper_x]
uart_pin = PC7
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_x]
motor = us-17hs4401s

[motor_constants us-17hs4401s]
resistance = 1.50
inductance = 0.0028
holding_torque = 0.40
max_current = 1.50
steps_per_revolution = 200

[stepper_y]
step_pin = PE0
dir_pin = !PB9
enable_pin = !PE1
microsteps = 16
rotation_distance = 40
endstop_pin = !PA12
position_endstop = 300
position_max = 300
homing_speed = 50

[tmc2209 stepper_y]
uart_pin = PC13
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_y]
motor = us-17hs4401s

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_min = -5
position_max = 340

[tmc2209 stepper_z]
uart_pin = PB13
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z]
motor = 42shdc3030z-17b18b

[stepper_z1]
step_pin = PA6
dir_pin = !PA1
enable_pin = !PA3
microsteps = 16
rotation_distance = 8

[tmc2209 stepper_z1]
uart_pin = PB14
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z1]
motor = 42shdc3030z-17b18b

[motor_constants 42shdc3030z-17b18b]
resistance = 1.65
inductance = 0.0028
holding_torque = 0.50
max_current = 1.68
steps_per_revolution = 200

[heater_bed]
heater_pin = PA0
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
min_temp = 0
max_temp = 130
control = pid
pid_kp = 70.573
pid_ki = 1.245
pid_kd = 1000.370

[verify_heater heater_bed]
max_error = 120
check_gain_time = 120
hysteresis = 20
heating_gain = 0.2

[safe_z_home]
home_xy_position = 160, 160
speed = 300
z_hop = 7
z_hop_speed = 25

[idle_timeout]
timeout = 1800

[z_tilt]
z_positions = 
	343, 160
	-13, 160
points = 
	20, 160
	290, 160
speed = 300
horizontal_move_z = 7
retries = 10
retry_tolerance = 0.09

[bed_screws]
screw1 = 24, 62
screw1_name = front left
screw2 = 24, 300
screw2_name = back left
screw3 = 293, 300
screw3_name = back right
screw4 = 293, 62
screw4_name = front right

[screws_tilt_adjust]
screw1 = 24, 62
screw1_name = front left
screw2 = 24,300
screw2_name = back left
screw3 = 263, 300
screw3_name = back right
screw4 = 263, 62
screw4_name = front right
horizontal_move_z = 5
speed = 250
screw_thread = CW-M4

[printer]
kinematics = corexy
max_velocity = 400
max_accel = 19840
max_z_velocity = 25
max_z_accel = 100
minimum_cruise_ratio = 0.5
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 1.0

[pause_resume]
recover_velocity = 50.0

[force_move]
enable_force_move = False

[input_shaper]
shaper_freq_x = 82.4
shaper_freq_y = 54.4
shaper_type = mzv

[display_status]

[bed_mesh 6]
version = 1
points = 
	-0.174620, -0.157120, -0.140870, -0.140870, -0.142120, -0.179620
	-0.128370, -0.140870, -0.137120, -0.134620, -0.137120, -0.165870
	-0.072120, -0.099620, -0.090870, -0.094620, -0.095870, -0.112120
	0.044130, -0.014620, -0.015870, -0.028370, -0.039620, -0.059620
	0.099130, 0.056630, 0.052880, 0.052880, 0.031630, -0.032120
	0.206630, 0.149130, 0.131630, 0.111630, 0.097880, 0.071630
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 15.0
max_x = 210.0
min_y = 21.0
max_y = 219.95

[bed_mesh default]
version = 1
points = 
	-0.039175, -0.019175, -0.009175, 0.003325, 0.010825, 0.003325, 0.012075, -0.009175, 0.019575
	-0.019175, -0.034175, -0.024175, -0.019175, -0.017925, -0.031675, -0.040425, -0.032925, -0.009175
	-0.012925, -0.040425, -0.025425, -0.021675, -0.005425, -0.011675, -0.030425, -0.022925, 0.003325
	-0.005425, -0.030425, -0.007925, -0.002925, 0.013325, 0.002075, -0.007925, -0.001675, 0.020825
	-0.005425, -0.015425, 0.002075, 0.005825, 0.018325, 0.024575, 0.014575, 0.027075, 0.054575
	-0.000425, -0.046675, -0.014175, -0.015425, -0.006675, -0.001675, -0.009175, 0.025825, 0.054575
	0.008325, -0.029175, -0.029175, -0.015425, -0.005425, -0.005425, -0.007925, 0.004575, 0.042075
	0.037075, -0.017925, -0.017925, -0.011675, -0.009175, -0.001675, 0.005825, 0.024575, 0.057075
	0.058325, 0.020825, 0.003325, -0.000425, 0.010825, 0.014575, 0.039575, 0.044575, 0.089575
x_count = 9
y_count = 9
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 20.0
max_x = 290.0
min_y = 45.0
max_y = 239.96000000000004
=======================
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/orangepi/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/adxl345.py", line 302, in load_config
    return ADXL345(config)
           ^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/adxl345.py", line 199, in __init__
    self.spi = bus.MCU_SPI_from_config(config, 3, default_speed=5000000)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/bus.py", line 125, in MCU_SPI_from_config
    cs_pin = config.get(pin_option)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 62, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 37, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'cs_pin' in section 'adxl345' must be specified
Starting Klippy...
Args: ['/home/orangepi/klipper/klippy/klippy.py', '/home/orangepi/printer_data/config/printer.cfg', '-I', '/home/orangepi/printer_data/comms/klippy.serial', '-l', '/home/orangepi/printer_data/logs/klippy.log', '-a', '/home/orangepi/printer_data/comms/klippy.sock']
Git version: 'v0.13.0-33-g413ff19e-dirty'
Untracked files: klippy/extras/auto_speed.py, klippy/extras/autotune_tmc.py, klippy/extras/motor_constants.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, Nov 30 2024, 21:22:50) [GCC 12.2.0]'
Start printer at Thu Apr 17 21:27:49 2025 (1744925269.3 22.8)
===== Config file =====
[gcode_macro CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% else %}
	{% endif %}

[gcode_macro G29]
gcode = 
	M400
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE profile=6 mesh_min=15,21 mesh_max=210,220 probe_count=6 algorithm=bicubic
	M400
	G4 P2000
	G91
	G1 Z5 F300
	G90
	G28 Z
	G1 X117.5 Y100 F12000
	G1 Z0 F300

[gcode_macro PRINT_START]
gcode = 
	
	G92 E0
	G90
	
	
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
	{% set BED_MESH = params.BED_MESH|default('default')|string %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	
	SET_BED_TEMPERATURE TARGET={BED_TEMP}
	BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
	{% if BED_HEAT_SOAK_MINUTES > 0 %}
	RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
	G4 P{BED_HEAT_SOAK_MINUTES * 60000}
	{% endif %}
	
	CG28
	
	{% if BED_MESH == 'full' %}
	BED_MESH_CALIBRATE
	{% elif BED_MESH == 'adaptive' %}
	BED_MESH_CALIBRATE ADAPTIVE=1
	{% elif BED_MESH != 'none' %}
	BED_MESH_PROFILE LOAD={BED_MESH}
	{% endif %}
	Smart_Park
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
	LINE_PURGE
	G92 E0
	G1 Z2.0 F3000
	M117 Printing

[gcode_macro PRINT_END]
gcode = 
	
	
	M400
	TURN_OFF_HEATERS
	G92 E0
	G91
	G1 E-2 F2700
	G1 X5 Y5 F3000
	G1 E-2 Z0.2 F1600
	G1 Z4 F3000
	G90
	G1 X0 Y230
	M107
	M84
	
	M117
	END_TUNE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	PAUSE_TUNE
	{% set z = params.Z|default(30)|int %}
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	G91
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 Z{z} F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	{% if printer['pause_resume'].is_paused|int == 1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	G1 E80  F200
	G4 P2000
	G1 X20 F15000
	G1 X-20
	G1 X20
	G1 X-20
	G1 X20
	G1 X-20
	RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60
	G1 X-3 Y-3 F3000
	G1 Z{zhop * -1} F900
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M400
	BASE_RESUME
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	
	{% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
	{% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
	{% set MINIMUM_RATIO    = printer.configfile.settings['printer'].minimum_cruise_ratio|float %}
	{% set SQUARE_VELOCITY   = printer.configfile.settings['printer'].square_corner_velocity|float %}
	
	SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} MINIMUM_CRUISE_RATIO={MINIMUM_RATIO} SQUARE_CORNER_VELOCITY={SQUARE_VELOCITY}
	
	
	{% set z = params.Z|default(100)|int %}
	{% set x_park = params.X|default(printer.toolhead.axis_minimum.x+5)|int %}
	{% set y_park = params.Y|default(printer.toolhead.axis_maximum.y-5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE
	M400
	M220 S100
	M221 S100
	G91
	M83
	G1 E-10.0 F1200
	TURN_OFF_HEATERS
	M107
	{% if (printer.gcode_move.position.z+5) < z %}
	G90
	G0 X{x_park} Y{y_park} Z{z+5} F6000
	{% endif %}
	{%if (printer.gcode_move.position.z+5) >= z %}
	{%if (printer.gcode_move.position.z+5) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z5 F300
	G90
	G0 X{x_park} Y{y_park} F6000
	{% else %}
	G90
	G0 X{x_park} Y{y_park} Z{printer.toolhead.axis_maximum.z} F6000
	{% endif %}
	{% endif %}
	M84

[gcode_macro SET_BED_TEMPERATURE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode = 
	{% if params.MINIMUM is defined and params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
	{% elif params.MINIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
	{% elif params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
	{% else %}
	RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
	{% endif %}

[gcode_macro Axis_Twist_Comp_Tune]
gcode = 
	CG28
	AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Z_Tilt_Adjust_Comp]
gcode = 
	CG28
	Z_TILT_ADJUST

[gcode_macro PID_Tune_EXTRUDER]
gcode = 
	{% set temperature = params.TEMPERATURE|default(210) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=extruder TARGET={temperature}
	SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode = 
	{% set temperature = params.TEMPERATURE|default(60) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
	SAVE_CONFIG

[gcode_macro Bed_Level_Screws_Tune]
gcode = 
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Z_Offset]
gcode = 
	CG28
	PROBE_CALIBRATE

[gcode_macro SPEED_TEST]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Speed Test Macro"
	CG28
	AUTO_SPEED

[gcode_macro Auto_Full_Bed_Level]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	Z_Tilt_Adjust_Comp
	BED_MESH_CALIBRATE

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[virtual_sdcard]
path = ~/printer_data/gcodes

[output_pin relay]
pin = PA2
value = 1

[resonance_tester]
accel_chip = adxl345
probe_points = 
	100, 100, 20

[adxl345]

[auto_speed]

[exclude_object]

[probe]
z_offset = 1.699

[extruder]
control = pid
pid_kp = 37.351
pid_ki = 11.857
pid_kd = 29.414

[stepper_x]
step_pin = PE3
dir_pin = !PE2
enable_pin = !PE4
microsteps = 16
rotation_distance = 40
endstop_pin = !EBBCan: PB6
position_endstop = 0
position_max = 300
homing_speed = 50

[tmc2209 stepper_x]
uart_pin = PC7
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_x]
motor = us-17hs4401s

[motor_constants us-17hs4401s]
resistance = 1.50
inductance = 0.0028
holding_torque = 0.40
max_current = 1.50
steps_per_revolution = 200

[stepper_y]
step_pin = PE0
dir_pin = !PB9
enable_pin = !PE1
microsteps = 16
rotation_distance = 40
endstop_pin = !PA12
position_endstop = 300
position_max = 300
homing_speed = 50

[tmc2209 stepper_y]
uart_pin = PC13
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_y]
motor = us-17hs4401s

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_min = -5
position_max = 340

[tmc2209 stepper_z]
uart_pin = PB13
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z]
motor = 42shdc3030z-17b18b

[stepper_z1]
step_pin = PA6
dir_pin = !PA1
enable_pin = !PA3
microsteps = 16
rotation_distance = 8

[tmc2209 stepper_z1]
uart_pin = PB14
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z1]
motor = 42shdc3030z-17b18b

[motor_constants 42shdc3030z-17b18b]
resistance = 1.65
inductance = 0.0028
holding_torque = 0.50
max_current = 1.68
steps_per_revolution = 200

[heater_bed]
heater_pin = PA0
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
min_temp = 0
max_temp = 130
control = pid
pid_kp = 70.573
pid_ki = 1.245
pid_kd = 1000.370

[verify_heater heater_bed]
max_error = 120
check_gain_time = 120
hysteresis = 20
heating_gain = 0.2

[safe_z_home]
home_xy_position = 160, 160
speed = 300
z_hop = 7
z_hop_speed = 25

[idle_timeout]
timeout = 1800

[z_tilt]
z_positions = 
	343, 160
	-13, 160
points = 
	20, 160
	290, 160
speed = 300
horizontal_move_z = 7
retries = 10
retry_tolerance = 0.09

[bed_screws]
screw1 = 24, 62
screw1_name = front left
screw2 = 24, 300
screw2_name = back left
screw3 = 293, 300
screw3_name = back right
screw4 = 293, 62
screw4_name = front right

[screws_tilt_adjust]
screw1 = 24, 62
screw1_name = front left
screw2 = 24,300
screw2_name = back left
screw3 = 263, 300
screw3_name = back right
screw4 = 263, 62
screw4_name = front right
horizontal_move_z = 5
speed = 250
screw_thread = CW-M4

[printer]
kinematics = corexy
max_velocity = 400
max_accel = 19840
max_z_velocity = 25
max_z_accel = 100
minimum_cruise_ratio = 0.5
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 1.0

[pause_resume]
recover_velocity = 50.0

[force_move]
enable_force_move = False

[input_shaper]
shaper_freq_x = 82.4
shaper_freq_y = 54.4
shaper_type = mzv

[display_status]

[bed_mesh 6]
version = 1
points = 
	-0.174620, -0.157120, -0.140870, -0.140870, -0.142120, -0.179620
	-0.128370, -0.140870, -0.137120, -0.134620, -0.137120, -0.165870
	-0.072120, -0.099620, -0.090870, -0.094620, -0.095870, -0.112120
	0.044130, -0.014620, -0.015870, -0.028370, -0.039620, -0.059620
	0.099130, 0.056630, 0.052880, 0.052880, 0.031630, -0.032120
	0.206630, 0.149130, 0.131630, 0.111630, 0.097880, 0.071630
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 15.0
max_x = 210.0
min_y = 21.0
max_y = 219.95

[bed_mesh default]
version = 1
points = 
	-0.039175, -0.019175, -0.009175, 0.003325, 0.010825, 0.003325, 0.012075, -0.009175, 0.019575
	-0.019175, -0.034175, -0.024175, -0.019175, -0.017925, -0.031675, -0.040425, -0.032925, -0.009175
	-0.012925, -0.040425, -0.025425, -0.021675, -0.005425, -0.011675, -0.030425, -0.022925, 0.003325
	-0.005425, -0.030425, -0.007925, -0.002925, 0.013325, 0.002075, -0.007925, -0.001675, 0.020825
	-0.005425, -0.015425, 0.002075, 0.005825, 0.018325, 0.024575, 0.014575, 0.027075, 0.054575
	-0.000425, -0.046675, -0.014175, -0.015425, -0.006675, -0.001675, -0.009175, 0.025825, 0.054575
	0.008325, -0.029175, -0.029175, -0.015425, -0.005425, -0.005425, -0.007925, 0.004575, 0.042075
	0.037075, -0.017925, -0.017925, -0.011675, -0.009175, -0.001675, 0.005825, 0.024575, 0.057075
	0.058325, 0.020825, 0.003325, -0.000425, 0.010825, 0.014575, 0.039575, 0.044575, 0.089575
x_count = 9
y_count = 9
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 20.0
max_x = 290.0
min_y = 45.0
max_y = 239.96000000000004
=======================
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/orangepi/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/adxl345.py", line 302, in load_config
    return ADXL345(config)
           ^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/adxl345.py", line 199, in __init__
    self.spi = bus.MCU_SPI_from_config(config, 3, default_speed=5000000)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/bus.py", line 125, in MCU_SPI_from_config
    cs_pin = config.get(pin_option)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 62, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 37, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'cs_pin' in section 'adxl345' must be specified
webhooks client 281473399240912: New connection
webhooks client 281473399240912: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
Unable to issue reset command on MCU 'mcu'
webhooks client 281473399240912: Disconnected
Restarting printer
Start printer at Thu Apr 17 21:28:45 2025 (1744925325.8 65.4)
===== Config file =====
[gcode_macro CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% else %}
	{% endif %}

[gcode_macro G29]
gcode = 
	M400
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE profile=6 mesh_min=15,21 mesh_max=210,220 probe_count=6 algorithm=bicubic
	M400
	G4 P2000
	G91
	G1 Z5 F300
	G90
	G28 Z
	G1 X117.5 Y100 F12000
	G1 Z0 F300

[gcode_macro PRINT_START]
gcode = 
	
	G92 E0
	G90
	
	
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
	{% set BED_MESH = params.BED_MESH|default('default')|string %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	
	SET_BED_TEMPERATURE TARGET={BED_TEMP}
	BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
	{% if BED_HEAT_SOAK_MINUTES > 0 %}
	RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
	G4 P{BED_HEAT_SOAK_MINUTES * 60000}
	{% endif %}
	
	CG28
	
	{% if BED_MESH == 'full' %}
	BED_MESH_CALIBRATE
	{% elif BED_MESH == 'adaptive' %}
	BED_MESH_CALIBRATE ADAPTIVE=1
	{% elif BED_MESH != 'none' %}
	BED_MESH_PROFILE LOAD={BED_MESH}
	{% endif %}
	Smart_Park
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
	LINE_PURGE
	G92 E0
	G1 Z2.0 F3000
	M117 Printing

[gcode_macro PRINT_END]
gcode = 
	
	
	M400
	TURN_OFF_HEATERS
	G92 E0
	G91
	G1 E-2 F2700
	G1 X5 Y5 F3000
	G1 E-2 Z0.2 F1600
	G1 Z4 F3000
	G90
	G1 X0 Y230
	M107
	M84
	
	M117
	END_TUNE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	PAUSE_TUNE
	{% set z = params.Z|default(30)|int %}
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	G91
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 Z{z} F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	{% if printer['pause_resume'].is_paused|int == 1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	G1 E80  F200
	G4 P2000
	G1 X20 F15000
	G1 X-20
	G1 X20
	G1 X-20
	G1 X20
	G1 X-20
	RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60
	G1 X-3 Y-3 F3000
	G1 Z{zhop * -1} F900
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M400
	BASE_RESUME
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	
	{% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
	{% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
	{% set MINIMUM_RATIO    = printer.configfile.settings['printer'].minimum_cruise_ratio|float %}
	{% set SQUARE_VELOCITY   = printer.configfile.settings['printer'].square_corner_velocity|float %}
	
	SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} MINIMUM_CRUISE_RATIO={MINIMUM_RATIO} SQUARE_CORNER_VELOCITY={SQUARE_VELOCITY}
	
	
	{% set z = params.Z|default(100)|int %}
	{% set x_park = params.X|default(printer.toolhead.axis_minimum.x+5)|int %}
	{% set y_park = params.Y|default(printer.toolhead.axis_maximum.y-5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE
	M400
	M220 S100
	M221 S100
	G91
	M83
	G1 E-10.0 F1200
	TURN_OFF_HEATERS
	M107
	{% if (printer.gcode_move.position.z+5) < z %}
	G90
	G0 X{x_park} Y{y_park} Z{z+5} F6000
	{% endif %}
	{%if (printer.gcode_move.position.z+5) >= z %}
	{%if (printer.gcode_move.position.z+5) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z5 F300
	G90
	G0 X{x_park} Y{y_park} F6000
	{% else %}
	G90
	G0 X{x_park} Y{y_park} Z{printer.toolhead.axis_maximum.z} F6000
	{% endif %}
	{% endif %}
	M84

[gcode_macro SET_BED_TEMPERATURE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode = 
	{% if params.MINIMUM is defined and params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
	{% elif params.MINIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
	{% elif params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
	{% else %}
	RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
	{% endif %}

[gcode_macro Axis_Twist_Comp_Tune]
gcode = 
	CG28
	AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Z_Tilt_Adjust_Comp]
gcode = 
	CG28
	Z_TILT_ADJUST

[gcode_macro PID_Tune_EXTRUDER]
gcode = 
	{% set temperature = params.TEMPERATURE|default(210) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=extruder TARGET={temperature}
	SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode = 
	{% set temperature = params.TEMPERATURE|default(60) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
	SAVE_CONFIG

[gcode_macro Bed_Level_Screws_Tune]
gcode = 
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Z_Offset]
gcode = 
	CG28
	PROBE_CALIBRATE

[gcode_macro SPEED_TEST]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Speed Test Macro"
	CG28
	AUTO_SPEED

[gcode_macro Auto_Full_Bed_Level]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	Z_Tilt_Adjust_Comp
	BED_MESH_CALIBRATE

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[virtual_sdcard]
path = ~/printer_data/gcodes

[output_pin relay]
pin = PA2
value = 1

[exclude_object]

[stepper_x]
step_pin = PE3
dir_pin = !PE2
enable_pin = !PE4
microsteps = 16
rotation_distance = 40
endstop_pin = !EBBCan: PB6
position_endstop = 0
position_max = 300
homing_speed = 50

[tmc2209 stepper_x]
uart_pin = PC7
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_x]
motor = us-17hs4401s

[motor_constants us-17hs4401s]
resistance = 1.50
inductance = 0.0028
holding_torque = 0.40
max_current = 1.50
steps_per_revolution = 200

[stepper_y]
step_pin = PE0
dir_pin = !PB9
enable_pin = !PE1
microsteps = 16
rotation_distance = 40
endstop_pin = !PA12
position_endstop = 300
position_max = 300
homing_speed = 50

[tmc2209 stepper_y]
uart_pin = PC13
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_y]
motor = us-17hs4401s

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_min = -5
position_max = 340

[tmc2209 stepper_z]
uart_pin = PB13
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z]
motor = 42shdc3030z-17b18b

[stepper_z1]
step_pin = PA6
dir_pin = !PA1
enable_pin = !PA3
microsteps = 16
rotation_distance = 8

[tmc2209 stepper_z1]
uart_pin = PB14
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z1]
motor = 42shdc3030z-17b18b

[motor_constants 42shdc3030z-17b18b]
resistance = 1.65
inductance = 0.0028
holding_torque = 0.50
max_current = 1.68
steps_per_revolution = 200

[heater_bed]
heater_pin = PA0
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
min_temp = 0
max_temp = 130
control = pid
pid_kp = 70.573
pid_ki = 1.245
pid_kd = 1000.370

[verify_heater heater_bed]
max_error = 120
check_gain_time = 120
hysteresis = 20
heating_gain = 0.2

[safe_z_home]
home_xy_position = 160, 160
speed = 300
z_hop = 7
z_hop_speed = 25

[idle_timeout]
timeout = 1800

[z_tilt]
z_positions = 
	343, 160
	-13, 160
points = 
	20, 160
	290, 160
speed = 300
horizontal_move_z = 7
retries = 10
retry_tolerance = 0.09

[bed_screws]
screw1 = 24, 62
screw1_name = front left
screw2 = 24, 300
screw2_name = back left
screw3 = 293, 300
screw3_name = back right
screw4 = 293, 62
screw4_name = front right

[screws_tilt_adjust]
screw1 = 24, 62
screw1_name = front left
screw2 = 24,300
screw2_name = back left
screw3 = 263, 300
screw3_name = back right
screw4 = 263, 62
screw4_name = front right
horizontal_move_z = 5
speed = 250
screw_thread = CW-M4

[printer]
kinematics = corexy
max_velocity = 400
max_accel = 19840
max_z_velocity = 25
max_z_accel = 100
minimum_cruise_ratio = 0.5
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 1.0

[pause_resume]
recover_velocity = 50.0

[force_move]
enable_force_move = False

[input_shaper]
shaper_freq_x = 82.4
shaper_freq_y = 54.4
shaper_type = mzv

[display_status]

[probe]
z_offset = 1.699

[bed_mesh 6]
version = 1
points = 
	-0.174620, -0.157120, -0.140870, -0.140870, -0.142120, -0.179620
	-0.128370, -0.140870, -0.137120, -0.134620, -0.137120, -0.165870
	-0.072120, -0.099620, -0.090870, -0.094620, -0.095870, -0.112120
	0.044130, -0.014620, -0.015870, -0.028370, -0.039620, -0.059620
	0.099130, 0.056630, 0.052880, 0.052880, 0.031630, -0.032120
	0.206630, 0.149130, 0.131630, 0.111630, 0.097880, 0.071630
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 15.0
max_x = 210.0
min_y = 21.0
max_y = 219.95

[bed_mesh default]
version = 1
points = 
	-0.039175, -0.019175, -0.009175, 0.003325, 0.010825, 0.003325, 0.012075, -0.009175, 0.019575
	-0.019175, -0.034175, -0.024175, -0.019175, -0.017925, -0.031675, -0.040425, -0.032925, -0.009175
	-0.012925, -0.040425, -0.025425, -0.021675, -0.005425, -0.011675, -0.030425, -0.022925, 0.003325
	-0.005425, -0.030425, -0.007925, -0.002925, 0.013325, 0.002075, -0.007925, -0.001675, 0.020825
	-0.005425, -0.015425, 0.002075, 0.005825, 0.018325, 0.024575, 0.014575, 0.027075, 0.054575
	-0.000425, -0.046675, -0.014175, -0.015425, -0.006675, -0.001675, -0.009175, 0.025825, 0.054575
	0.008325, -0.029175, -0.029175, -0.015425, -0.005425, -0.005425, -0.007925, 0.004575, 0.042075
	0.037075, -0.017925, -0.017925, -0.011675, -0.009175, -0.001675, 0.005825, 0.024575, 0.057075
	0.058325, 0.020825, 0.003325, -0.000425, 0.010825, 0.014575, 0.039575, 0.044575, 0.089575
x_count = 9
y_count = 9
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 20.0
max_x = 290.0
min_y = 45.0
max_y = 239.96000000000004

[extruder]
control = pid
pid_kp = 37.351
pid_ki = 11.857
pid_kd = 29.414
=======================
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/orangepi/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/probe.py", line 580, in load_config
    return PrinterProbe(config)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/probe.py", line 565, in __init__
    self.mcu_probe = ProbeEndstopWrapper(config)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/probe.py", line 514, in __init__
    self.mcu_endstop = ppins.setup_pin('endstop', config.get('pin'))
                                                  ^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 62, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 37, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'pin' in section 'probe' must be specified
webhooks client 281473398694544: New connection
webhooks client 281473398694544: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
Unable to issue reset command on MCU 'mcu'
webhooks client 281473398694544: Disconnected
Restarting printer
Start printer at Thu Apr 17 21:30:23 2025 (1744925423.5 163.1)
===== Config file =====
[gcode_macro CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% else %}
	{% endif %}

[gcode_macro G29]
gcode = 
	M400
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE profile=6 mesh_min=15,21 mesh_max=210,220 probe_count=6 algorithm=bicubic
	M400
	G4 P2000
	G91
	G1 Z5 F300
	G90
	G28 Z
	G1 X117.5 Y100 F12000
	G1 Z0 F300

[gcode_macro PRINT_START]
gcode = 
	
	G92 E0
	G90
	
	
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
	{% set BED_MESH = params.BED_MESH|default('default')|string %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	
	SET_BED_TEMPERATURE TARGET={BED_TEMP}
	BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
	{% if BED_HEAT_SOAK_MINUTES > 0 %}
	RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
	G4 P{BED_HEAT_SOAK_MINUTES * 60000}
	{% endif %}
	
	CG28
	
	{% if BED_MESH == 'full' %}
	BED_MESH_CALIBRATE
	{% elif BED_MESH == 'adaptive' %}
	BED_MESH_CALIBRATE ADAPTIVE=1
	{% elif BED_MESH != 'none' %}
	BED_MESH_PROFILE LOAD={BED_MESH}
	{% endif %}
	Smart_Park
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
	LINE_PURGE
	G92 E0
	G1 Z2.0 F3000
	M117 Printing

[gcode_macro PRINT_END]
gcode = 
	
	
	M400
	TURN_OFF_HEATERS
	G92 E0
	G91
	G1 E-2 F2700
	G1 X5 Y5 F3000
	G1 E-2 Z0.2 F1600
	G1 Z4 F3000
	G90
	G1 X0 Y230
	M107
	M84
	
	M117
	END_TUNE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	PAUSE_TUNE
	{% set z = params.Z|default(30)|int %}
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	G91
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 Z{z} F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	{% if printer['pause_resume'].is_paused|int == 1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	G1 E80  F200
	G4 P2000
	G1 X20 F15000
	G1 X-20
	G1 X20
	G1 X-20
	G1 X20
	G1 X-20
	RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60
	G1 X-3 Y-3 F3000
	G1 Z{zhop * -1} F900
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M400
	BASE_RESUME
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	
	{% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
	{% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
	{% set MINIMUM_RATIO    = printer.configfile.settings['printer'].minimum_cruise_ratio|float %}
	{% set SQUARE_VELOCITY   = printer.configfile.settings['printer'].square_corner_velocity|float %}
	
	SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} MINIMUM_CRUISE_RATIO={MINIMUM_RATIO} SQUARE_CORNER_VELOCITY={SQUARE_VELOCITY}
	
	
	{% set z = params.Z|default(100)|int %}
	{% set x_park = params.X|default(printer.toolhead.axis_minimum.x+5)|int %}
	{% set y_park = params.Y|default(printer.toolhead.axis_maximum.y-5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE
	M400
	M220 S100
	M221 S100
	G91
	M83
	G1 E-10.0 F1200
	TURN_OFF_HEATERS
	M107
	{% if (printer.gcode_move.position.z+5) < z %}
	G90
	G0 X{x_park} Y{y_park} Z{z+5} F6000
	{% endif %}
	{%if (printer.gcode_move.position.z+5) >= z %}
	{%if (printer.gcode_move.position.z+5) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z5 F300
	G90
	G0 X{x_park} Y{y_park} F6000
	{% else %}
	G90
	G0 X{x_park} Y{y_park} Z{printer.toolhead.axis_maximum.z} F6000
	{% endif %}
	{% endif %}
	M84

[gcode_macro SET_BED_TEMPERATURE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode = 
	{% if params.MINIMUM is defined and params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
	{% elif params.MINIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
	{% elif params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
	{% else %}
	RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
	{% endif %}

[gcode_macro Axis_Twist_Comp_Tune]
gcode = 
	CG28
	AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Z_Tilt_Adjust_Comp]
gcode = 
	CG28
	Z_TILT_ADJUST

[gcode_macro PID_Tune_EXTRUDER]
gcode = 
	{% set temperature = params.TEMPERATURE|default(210) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=extruder TARGET={temperature}
	SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode = 
	{% set temperature = params.TEMPERATURE|default(60) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
	SAVE_CONFIG

[gcode_macro Bed_Level_Screws_Tune]
gcode = 
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Z_Offset]
gcode = 
	CG28
	PROBE_CALIBRATE

[gcode_macro SPEED_TEST]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Speed Test Macro"
	CG28
	AUTO_SPEED

[gcode_macro Auto_Full_Bed_Level]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	Z_Tilt_Adjust_Comp
	BED_MESH_CALIBRATE

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[virtual_sdcard]
path = ~/printer_data/gcodes

[output_pin relay]
pin = PA2
value = 1

[exclude_object]

[stepper_x]
step_pin = PE3
dir_pin = !PE2
enable_pin = !PE4
microsteps = 16
rotation_distance = 40
endstop_pin = !EBBCan: PB6
position_endstop = 0
position_max = 300
homing_speed = 50

[tmc2209 stepper_x]
uart_pin = PC7
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_x]
motor = us-17hs4401s

[motor_constants us-17hs4401s]
resistance = 1.50
inductance = 0.0028
holding_torque = 0.40
max_current = 1.50
steps_per_revolution = 200

[stepper_y]
step_pin = PE0
dir_pin = !PB9
enable_pin = !PE1
microsteps = 16
rotation_distance = 40
endstop_pin = !PA12
position_endstop = 300
position_max = 300
homing_speed = 50

[tmc2209 stepper_y]
uart_pin = PC13
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_y]
motor = us-17hs4401s

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
microsteps = 16
rotation_distance = 8
endstop_pin = !PA11
position_min = -5
position_max = 340

[tmc2209 stepper_z]
uart_pin = PB13
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z]
motor = 42shdc3030z-17b18b

[stepper_z1]
step_pin = PA6
dir_pin = !PA1
enable_pin = !PA3
microsteps = 16
rotation_distance = 8

[tmc2209 stepper_z1]
uart_pin = PB14
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z1]
motor = 42shdc3030z-17b18b

[motor_constants 42shdc3030z-17b18b]
resistance = 1.65
inductance = 0.0028
holding_torque = 0.50
max_current = 1.68
steps_per_revolution = 200

[heater_bed]
heater_pin = PA0
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
min_temp = 0
max_temp = 130
control = pid
pid_kp = 70.573
pid_ki = 1.245
pid_kd = 1000.370

[verify_heater heater_bed]
max_error = 120
check_gain_time = 120
hysteresis = 20
heating_gain = 0.2

[safe_z_home]
home_xy_position = 160, 160
speed = 300
z_hop = 7
z_hop_speed = 25

[idle_timeout]
timeout = 1800

[z_tilt]
z_positions = 
	343, 160
	-13, 160
points = 
	20, 160
	290, 160
speed = 300
horizontal_move_z = 7
retries = 10
retry_tolerance = 0.09

[bed_screws]
screw1 = 24, 62
screw1_name = front left
screw2 = 24, 300
screw2_name = back left
screw3 = 293, 300
screw3_name = back right
screw4 = 293, 62
screw4_name = front right

[screws_tilt_adjust]
screw1 = 24, 62
screw1_name = front left
screw2 = 24,300
screw2_name = back left
screw3 = 263, 300
screw3_name = back right
screw4 = 263, 62
screw4_name = front right
horizontal_move_z = 5
speed = 250
screw_thread = CW-M4

[printer]
kinematics = corexy
max_velocity = 400
max_accel = 19840
max_z_velocity = 25
max_z_accel = 100
minimum_cruise_ratio = 0.5
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 1.0

[pause_resume]
recover_velocity = 50.0

[force_move]
enable_force_move = False

[input_shaper]
shaper_freq_x = 82.4
shaper_freq_y = 54.4
shaper_type = mzv

[display_status]

[probe]
z_offset = 1.699

[bed_mesh 6]
version = 1
points = 
	-0.174620, -0.157120, -0.140870, -0.140870, -0.142120, -0.179620
	-0.128370, -0.140870, -0.137120, -0.134620, -0.137120, -0.165870
	-0.072120, -0.099620, -0.090870, -0.094620, -0.095870, -0.112120
	0.044130, -0.014620, -0.015870, -0.028370, -0.039620, -0.059620
	0.099130, 0.056630, 0.052880, 0.052880, 0.031630, -0.032120
	0.206630, 0.149130, 0.131630, 0.111630, 0.097880, 0.071630
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 15.0
max_x = 210.0
min_y = 21.0
max_y = 219.95

[bed_mesh default]
version = 1
points = 
	-0.039175, -0.019175, -0.009175, 0.003325, 0.010825, 0.003325, 0.012075, -0.009175, 0.019575
	-0.019175, -0.034175, -0.024175, -0.019175, -0.017925, -0.031675, -0.040425, -0.032925, -0.009175
	-0.012925, -0.040425, -0.025425, -0.021675, -0.005425, -0.011675, -0.030425, -0.022925, 0.003325
	-0.005425, -0.030425, -0.007925, -0.002925, 0.013325, 0.002075, -0.007925, -0.001675, 0.020825
	-0.005425, -0.015425, 0.002075, 0.005825, 0.018325, 0.024575, 0.014575, 0.027075, 0.054575
	-0.000425, -0.046675, -0.014175, -0.015425, -0.006675, -0.001675, -0.009175, 0.025825, 0.054575
	0.008325, -0.029175, -0.029175, -0.015425, -0.005425, -0.005425, -0.007925, 0.004575, 0.042075
	0.037075, -0.017925, -0.017925, -0.011675, -0.009175, -0.001675, 0.005825, 0.024575, 0.057075
	0.058325, 0.020825, 0.003325, -0.000425, 0.010825, 0.014575, 0.039575, 0.044575, 0.089575
x_count = 9
y_count = 9
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 20.0
max_x = 290.0
min_y = 45.0
max_y = 239.96000000000004

[extruder]
control = pid
pid_kp = 37.351
pid_ki = 11.857
pid_kd = 29.414
=======================
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/orangepi/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/probe.py", line 580, in load_config
    return PrinterProbe(config)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/probe.py", line 565, in __init__
    self.mcu_probe = ProbeEndstopWrapper(config)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/probe.py", line 514, in __init__
    self.mcu_endstop = ppins.setup_pin('endstop', config.get('pin'))
                                                  ^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 62, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 37, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'pin' in section 'probe' must be specified
webhooks client 281473396967248: New connection
webhooks client 281473396967248: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
webhooks client 281473396967248: Disconnected
Restarting printer
Start printer at Thu Apr 17 21:31:08 2025 (1744925468.1 207.7)
===== Config file =====
[gcode_macro CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% else %}
	{% endif %}

[gcode_macro G29]
gcode = 
	M400
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE profile=6 mesh_min=15,21 mesh_max=210,220 probe_count=6 algorithm=bicubic
	M400
	G4 P2000
	G91
	G1 Z5 F300
	G90
	G28 Z
	G1 X117.5 Y100 F12000
	G1 Z0 F300

[gcode_macro PRINT_START]
gcode = 
	
	G92 E0
	G90
	
	
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
	{% set BED_MESH = params.BED_MESH|default('default')|string %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	
	SET_BED_TEMPERATURE TARGET={BED_TEMP}
	BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
	{% if BED_HEAT_SOAK_MINUTES > 0 %}
	RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
	G4 P{BED_HEAT_SOAK_MINUTES * 60000}
	{% endif %}
	
	CG28
	
	{% if BED_MESH == 'full' %}
	BED_MESH_CALIBRATE
	{% elif BED_MESH == 'adaptive' %}
	BED_MESH_CALIBRATE ADAPTIVE=1
	{% elif BED_MESH != 'none' %}
	BED_MESH_PROFILE LOAD={BED_MESH}
	{% endif %}
	Smart_Park
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
	LINE_PURGE
	G92 E0
	G1 Z2.0 F3000
	M117 Printing

[gcode_macro PRINT_END]
gcode = 
	
	
	M400
	TURN_OFF_HEATERS
	G92 E0
	G91
	G1 E-2 F2700
	G1 X5 Y5 F3000
	G1 E-2 Z0.2 F1600
	G1 Z4 F3000
	G90
	G1 X0 Y230
	M107
	M84
	
	M117
	END_TUNE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	PAUSE_TUNE
	{% set z = params.Z|default(30)|int %}
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	G91
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 Z{z} F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	{% if printer['pause_resume'].is_paused|int == 1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	G1 E80  F200
	G4 P2000
	G1 X20 F15000
	G1 X-20
	G1 X20
	G1 X-20
	G1 X20
	G1 X-20
	RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60
	G1 X-3 Y-3 F3000
	G1 Z{zhop * -1} F900
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M400
	BASE_RESUME
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	
	{% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
	{% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
	{% set MINIMUM_RATIO    = printer.configfile.settings['printer'].minimum_cruise_ratio|float %}
	{% set SQUARE_VELOCITY   = printer.configfile.settings['printer'].square_corner_velocity|float %}
	
	SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} MINIMUM_CRUISE_RATIO={MINIMUM_RATIO} SQUARE_CORNER_VELOCITY={SQUARE_VELOCITY}
	
	
	{% set z = params.Z|default(100)|int %}
	{% set x_park = params.X|default(printer.toolhead.axis_minimum.x+5)|int %}
	{% set y_park = params.Y|default(printer.toolhead.axis_maximum.y-5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE
	M400
	M220 S100
	M221 S100
	G91
	M83
	G1 E-10.0 F1200
	TURN_OFF_HEATERS
	M107
	{% if (printer.gcode_move.position.z+5) < z %}
	G90
	G0 X{x_park} Y{y_park} Z{z+5} F6000
	{% endif %}
	{%if (printer.gcode_move.position.z+5) >= z %}
	{%if (printer.gcode_move.position.z+5) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z5 F300
	G90
	G0 X{x_park} Y{y_park} F6000
	{% else %}
	G90
	G0 X{x_park} Y{y_park} Z{printer.toolhead.axis_maximum.z} F6000
	{% endif %}
	{% endif %}
	M84

[gcode_macro SET_BED_TEMPERATURE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode = 
	{% if params.MINIMUM is defined and params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
	{% elif params.MINIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
	{% elif params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
	{% else %}
	RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
	{% endif %}

[gcode_macro Axis_Twist_Comp_Tune]
gcode = 
	CG28
	AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Z_Tilt_Adjust_Comp]
gcode = 
	CG28
	Z_TILT_ADJUST

[gcode_macro PID_Tune_EXTRUDER]
gcode = 
	{% set temperature = params.TEMPERATURE|default(210) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=extruder TARGET={temperature}
	SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode = 
	{% set temperature = params.TEMPERATURE|default(60) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
	SAVE_CONFIG

[gcode_macro Bed_Level_Screws_Tune]
gcode = 
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Z_Offset]
gcode = 
	CG28
	PROBE_CALIBRATE

[gcode_macro SPEED_TEST]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Speed Test Macro"
	CG28
	AUTO_SPEED

[gcode_macro Auto_Full_Bed_Level]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	Z_Tilt_Adjust_Comp
	BED_MESH_CALIBRATE

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[virtual_sdcard]
path = ~/printer_data/gcodes

[output_pin relay]
pin = PA2
value = 1

[exclude_object]

[stepper_x]
step_pin = PE3
dir_pin = !PE2
enable_pin = !PE4
microsteps = 16
rotation_distance = 40
endstop_pin = !EBBCan: PB6
position_endstop = 0
position_max = 300
homing_speed = 50

[tmc2209 stepper_x]
uart_pin = PC7
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_x]
motor = us-17hs4401s

[motor_constants us-17hs4401s]
resistance = 1.50
inductance = 0.0028
holding_torque = 0.40
max_current = 1.50
steps_per_revolution = 200

[stepper_y]
step_pin = PE0
dir_pin = !PB9
enable_pin = !PE1
microsteps = 16
rotation_distance = 40
endstop_pin = !PA12
position_endstop = 300
position_max = 300
homing_speed = 50

[tmc2209 stepper_y]
uart_pin = PC13
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_y]
motor = us-17hs4401s

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
microsteps = 16
rotation_distance = 8
endstop_pin = !PA11
position_min = -5
position_max = 340

[tmc2209 stepper_z]
uart_pin = PB13
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z]
motor = 42shdc3030z-17b18b

[stepper_z1]
step_pin = PA6
dir_pin = !PA1
enable_pin = !PA3
microsteps = 16
rotation_distance = 8

[tmc2209 stepper_z1]
uart_pin = PB14
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z1]
motor = 42shdc3030z-17b18b

[motor_constants 42shdc3030z-17b18b]
resistance = 1.65
inductance = 0.0028
holding_torque = 0.50
max_current = 1.68
steps_per_revolution = 200

[heater_bed]
heater_pin = PA0
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
min_temp = 0
max_temp = 130

[verify_heater heater_bed]
max_error = 120
check_gain_time = 120
hysteresis = 20
heating_gain = 0.2

[safe_z_home]
home_xy_position = 160, 160
speed = 300
z_hop = 7
z_hop_speed = 25

[idle_timeout]
timeout = 1800

[z_tilt]
z_positions = 
	343, 160
	-13, 160
points = 
	20, 160
	290, 160
speed = 300
horizontal_move_z = 7
retries = 10
retry_tolerance = 0.09

[bed_screws]
screw1 = 24, 62
screw1_name = front left
screw2 = 24, 300
screw2_name = back left
screw3 = 293, 300
screw3_name = back right
screw4 = 293, 62
screw4_name = front right

[screws_tilt_adjust]
screw1 = 24, 62
screw1_name = front left
screw2 = 24,300
screw2_name = back left
screw3 = 263, 300
screw3_name = back right
screw4 = 263, 62
screw4_name = front right
horizontal_move_z = 5
speed = 250
screw_thread = CW-M4

[printer]
kinematics = corexy
max_velocity = 400
max_accel = 19840
max_z_velocity = 25
max_z_accel = 100
minimum_cruise_ratio = 0.5
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 1.0

[pause_resume]
recover_velocity = 50.0

[force_move]
enable_force_move = False

[input_shaper]
shaper_freq_x = 82.4
shaper_freq_y = 54.4
shaper_type = mzv

[display_status]
=======================
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 123, in _read_config
    self.load_object(config, section_config.get_name(), None)
  File "/home/orangepi/klipper/klippy/klippy.py", line 112, in load_object
    self.objects[section] = init_func(config.getsection(section))
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/heater_bed.py", line 28, in load_config
    return PrinterHeaterBed(config)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/heater_bed.py", line 11, in __init__
    self.heater = pheaters.setup_heater(config, 'B')
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/heaters.py", line 279, in setup_heater
    self.heaters[heater_name] = heater = Heater(config, sensor)
                                         ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/heaters.py", line 50, in __init__
    algo = config.getchoice('control', algos)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 82, in getchoice
    c = self.get(option, default, note_valid=note_valid)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 62, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 37, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'control' in section 'heater_bed' must be specified
webhooks client 281473399981904: New connection
webhooks client 281473399981904: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
webhooks client 281473399981904: Disconnected
Restarting printer
Start printer at Thu Apr 17 21:31:38 2025 (1744925498.8 238.5)
===== Config file =====
[gcode_macro CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% else %}
	{% endif %}

[gcode_macro G29]
gcode = 
	M400
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE profile=6 mesh_min=15,21 mesh_max=210,220 probe_count=6 algorithm=bicubic
	M400
	G4 P2000
	G91
	G1 Z5 F300
	G90
	G28 Z
	G1 X117.5 Y100 F12000
	G1 Z0 F300

[gcode_macro PRINT_START]
gcode = 
	
	G92 E0
	G90
	
	
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
	{% set BED_MESH = params.BED_MESH|default('default')|string %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	
	SET_BED_TEMPERATURE TARGET={BED_TEMP}
	BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
	{% if BED_HEAT_SOAK_MINUTES > 0 %}
	RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
	G4 P{BED_HEAT_SOAK_MINUTES * 60000}
	{% endif %}
	
	CG28
	
	{% if BED_MESH == 'full' %}
	BED_MESH_CALIBRATE
	{% elif BED_MESH == 'adaptive' %}
	BED_MESH_CALIBRATE ADAPTIVE=1
	{% elif BED_MESH != 'none' %}
	BED_MESH_PROFILE LOAD={BED_MESH}
	{% endif %}
	Smart_Park
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
	LINE_PURGE
	G92 E0
	G1 Z2.0 F3000
	M117 Printing

[gcode_macro PRINT_END]
gcode = 
	
	
	M400
	TURN_OFF_HEATERS
	G92 E0
	G91
	G1 E-2 F2700
	G1 X5 Y5 F3000
	G1 E-2 Z0.2 F1600
	G1 Z4 F3000
	G90
	G1 X0 Y230
	M107
	M84
	
	M117
	END_TUNE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	PAUSE_TUNE
	{% set z = params.Z|default(30)|int %}
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	G91
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 Z{z} F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	{% if printer['pause_resume'].is_paused|int == 1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	G1 E80  F200
	G4 P2000
	G1 X20 F15000
	G1 X-20
	G1 X20
	G1 X-20
	G1 X20
	G1 X-20
	RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60
	G1 X-3 Y-3 F3000
	G1 Z{zhop * -1} F900
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M400
	BASE_RESUME
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	
	{% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
	{% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
	{% set MINIMUM_RATIO    = printer.configfile.settings['printer'].minimum_cruise_ratio|float %}
	{% set SQUARE_VELOCITY   = printer.configfile.settings['printer'].square_corner_velocity|float %}
	
	SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} MINIMUM_CRUISE_RATIO={MINIMUM_RATIO} SQUARE_CORNER_VELOCITY={SQUARE_VELOCITY}
	
	
	{% set z = params.Z|default(100)|int %}
	{% set x_park = params.X|default(printer.toolhead.axis_minimum.x+5)|int %}
	{% set y_park = params.Y|default(printer.toolhead.axis_maximum.y-5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE
	M400
	M220 S100
	M221 S100
	G91
	M83
	G1 E-10.0 F1200
	TURN_OFF_HEATERS
	M107
	{% if (printer.gcode_move.position.z+5) < z %}
	G90
	G0 X{x_park} Y{y_park} Z{z+5} F6000
	{% endif %}
	{%if (printer.gcode_move.position.z+5) >= z %}
	{%if (printer.gcode_move.position.z+5) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z5 F300
	G90
	G0 X{x_park} Y{y_park} F6000
	{% else %}
	G90
	G0 X{x_park} Y{y_park} Z{printer.toolhead.axis_maximum.z} F6000
	{% endif %}
	{% endif %}
	M84

[gcode_macro SET_BED_TEMPERATURE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode = 
	{% if params.MINIMUM is defined and params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
	{% elif params.MINIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
	{% elif params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
	{% else %}
	RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
	{% endif %}

[gcode_macro Axis_Twist_Comp_Tune]
gcode = 
	CG28
	AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Z_Tilt_Adjust_Comp]
gcode = 
	CG28
	Z_TILT_ADJUST

[gcode_macro PID_Tune_EXTRUDER]
gcode = 
	{% set temperature = params.TEMPERATURE|default(210) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=extruder TARGET={temperature}
	SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode = 
	{% set temperature = params.TEMPERATURE|default(60) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
	SAVE_CONFIG

[gcode_macro Bed_Level_Screws_Tune]
gcode = 
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Z_Offset]
gcode = 
	CG28
	PROBE_CALIBRATE

[gcode_macro SPEED_TEST]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Speed Test Macro"
	CG28
	AUTO_SPEED

[gcode_macro Auto_Full_Bed_Level]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	Z_Tilt_Adjust_Comp
	BED_MESH_CALIBRATE

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[virtual_sdcard]
path = ~/printer_data/gcodes

[output_pin relay]
pin = PA2
value = 1

[exclude_object]

[stepper_x]
step_pin = PE3
dir_pin = !PE2
enable_pin = !PE4
microsteps = 16
rotation_distance = 40
endstop_pin = !EBBCan: PB6
position_endstop = 0
position_max = 300
homing_speed = 50

[tmc2209 stepper_x]
uart_pin = PC7
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_x]
motor = us-17hs4401s

[motor_constants us-17hs4401s]
resistance = 1.50
inductance = 0.0028
holding_torque = 0.40
max_current = 1.50
steps_per_revolution = 200

[stepper_y]
step_pin = PE0
dir_pin = !PB9
enable_pin = !PE1
microsteps = 16
rotation_distance = 40
endstop_pin = !PA12
position_endstop = 300
position_max = 300
homing_speed = 50

[tmc2209 stepper_y]
uart_pin = PC13
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_y]
motor = us-17hs4401s

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
microsteps = 16
rotation_distance = 8
endstop_pin = !PA11
position_min = -5
position_max = 340

[tmc2209 stepper_z]
uart_pin = PB13
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z]
motor = 42shdc3030z-17b18b

[stepper_z1]
step_pin = PA6
dir_pin = !PA1
enable_pin = !PA3
microsteps = 16
rotation_distance = 8

[tmc2209 stepper_z1]
uart_pin = PB14
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z1]
motor = 42shdc3030z-17b18b

[motor_constants 42shdc3030z-17b18b]
resistance = 1.65
inductance = 0.0028
holding_torque = 0.50
max_current = 1.68
steps_per_revolution = 200

[heater_bed]
heater_pin = PA0
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
control = pid
min_temp = 0
max_temp = 130
pid_kp = 325.10
pid_ki = 63.35
pid_kd = 417.10

[verify_heater heater_bed]
max_error = 120
check_gain_time = 120
hysteresis = 20
heating_gain = 0.2

[safe_z_home]
home_xy_position = 160, 160
speed = 300
z_hop = 7
z_hop_speed = 25

[idle_timeout]
timeout = 1800

[z_tilt]
z_positions = 
	343, 160
	-13, 160
points = 
	20, 160
	290, 160
speed = 300
horizontal_move_z = 7
retries = 10
retry_tolerance = 0.09

[bed_screws]
screw1 = 24, 62
screw1_name = front left
screw2 = 24, 300
screw2_name = back left
screw3 = 293, 300
screw3_name = back right
screw4 = 293, 62
screw4_name = front right

[screws_tilt_adjust]
screw1 = 24, 62
screw1_name = front left
screw2 = 24,300
screw2_name = back left
screw3 = 263, 300
screw3_name = back right
screw4 = 263, 62
screw4_name = front right
horizontal_move_z = 5
speed = 250
screw_thread = CW-M4

[printer]
kinematics = corexy
max_velocity = 400
max_accel = 19840
max_z_velocity = 25
max_z_accel = 100
minimum_cruise_ratio = 0.5
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 1.0

[pause_resume]
recover_velocity = 50.0

[force_move]
enable_force_move = False

[input_shaper]
shaper_freq_x = 82.4
shaper_freq_y = 54.4
shaper_type = mzv

[display_status]
=======================
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 125, in _read_config
    m.add_printer_objects(config)
  File "/home/orangepi/klipper/klippy/toolhead.py", line 677, in add_printer_objects
    config.get_printer().add_object('toolhead', ToolHead(config))
                                                ^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/toolhead.py", line 273, in __init__
    self.kin = mod.load_kinematics(self, config)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/kinematics/corexy.py", line 96, in load_kinematics
    return CoreXYKinematics(toolhead, config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/kinematics/corexy.py", line 12, in __init__
    self.rails = [stepper.LookupMultiRail(config.getsection('stepper_' + n))
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/kinematics/corexy.py", line 12, in <listcomp>
    self.rails = [stepper.LookupMultiRail(config.getsection('stepper_' + n))
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/stepper.py", line 447, in LookupMultiRail
    rail = PrinterRail(config, need_position_minmax,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/stepper.py", line 328, in __init__
    self.add_extra_stepper(config)
  File "/home/orangepi/klipper/klippy/stepper.py", line 407, in add_extra_stepper
    pin_params = ppins.parse_pin(endstop_pin, True, True)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/pins.py", line 83, in parse_pin
    raise error("Unknown pin chip name '%s'" % (chip_name,))
pins.error: Unknown pin chip name 'EBBCan'
webhooks client 281473398341520: New connection
webhooks client 281473398341520: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
webhooks client 281473398341520: Disconnected
Restarting printer
Start printer at Thu Apr 17 21:32:21 2025 (1744925542.0 281.6)
===== Config file =====
[gcode_macro CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% else %}
	{% endif %}

[gcode_macro G29]
gcode = 
	M400
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE profile=6 mesh_min=15,21 mesh_max=210,220 probe_count=6 algorithm=bicubic
	M400
	G4 P2000
	G91
	G1 Z5 F300
	G90
	G28 Z
	G1 X117.5 Y100 F12000
	G1 Z0 F300

[gcode_macro PRINT_START]
gcode = 
	
	G92 E0
	G90
	
	
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
	{% set BED_MESH = params.BED_MESH|default('default')|string %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	
	SET_BED_TEMPERATURE TARGET={BED_TEMP}
	BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
	{% if BED_HEAT_SOAK_MINUTES > 0 %}
	RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
	G4 P{BED_HEAT_SOAK_MINUTES * 60000}
	{% endif %}
	
	CG28
	
	{% if BED_MESH == 'full' %}
	BED_MESH_CALIBRATE
	{% elif BED_MESH == 'adaptive' %}
	BED_MESH_CALIBRATE ADAPTIVE=1
	{% elif BED_MESH != 'none' %}
	BED_MESH_PROFILE LOAD={BED_MESH}
	{% endif %}
	Smart_Park
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
	LINE_PURGE
	G92 E0
	G1 Z2.0 F3000
	M117 Printing

[gcode_macro PRINT_END]
gcode = 
	
	
	M400
	TURN_OFF_HEATERS
	G92 E0
	G91
	G1 E-2 F2700
	G1 X5 Y5 F3000
	G1 E-2 Z0.2 F1600
	G1 Z4 F3000
	G90
	G1 X0 Y230
	M107
	M84
	
	M117
	END_TUNE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	PAUSE_TUNE
	{% set z = params.Z|default(30)|int %}
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	G91
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 Z{z} F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	{% if printer['pause_resume'].is_paused|int == 1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	G1 E80  F200
	G4 P2000
	G1 X20 F15000
	G1 X-20
	G1 X20
	G1 X-20
	G1 X20
	G1 X-20
	RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60
	G1 X-3 Y-3 F3000
	G1 Z{zhop * -1} F900
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M400
	BASE_RESUME
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	
	{% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
	{% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
	{% set MINIMUM_RATIO    = printer.configfile.settings['printer'].minimum_cruise_ratio|float %}
	{% set SQUARE_VELOCITY   = printer.configfile.settings['printer'].square_corner_velocity|float %}
	
	SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} MINIMUM_CRUISE_RATIO={MINIMUM_RATIO} SQUARE_CORNER_VELOCITY={SQUARE_VELOCITY}
	
	
	{% set z = params.Z|default(100)|int %}
	{% set x_park = params.X|default(printer.toolhead.axis_minimum.x+5)|int %}
	{% set y_park = params.Y|default(printer.toolhead.axis_maximum.y-5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE
	M400
	M220 S100
	M221 S100
	G91
	M83
	G1 E-10.0 F1200
	TURN_OFF_HEATERS
	M107
	{% if (printer.gcode_move.position.z+5) < z %}
	G90
	G0 X{x_park} Y{y_park} Z{z+5} F6000
	{% endif %}
	{%if (printer.gcode_move.position.z+5) >= z %}
	{%if (printer.gcode_move.position.z+5) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z5 F300
	G90
	G0 X{x_park} Y{y_park} F6000
	{% else %}
	G90
	G0 X{x_park} Y{y_park} Z{printer.toolhead.axis_maximum.z} F6000
	{% endif %}
	{% endif %}
	M84

[gcode_macro SET_BED_TEMPERATURE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode = 
	{% if params.MINIMUM is defined and params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
	{% elif params.MINIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
	{% elif params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
	{% else %}
	RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
	{% endif %}

[gcode_macro Axis_Twist_Comp_Tune]
gcode = 
	CG28
	AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Z_Tilt_Adjust_Comp]
gcode = 
	CG28
	Z_TILT_ADJUST

[gcode_macro PID_Tune_EXTRUDER]
gcode = 
	{% set temperature = params.TEMPERATURE|default(210) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=extruder TARGET={temperature}
	SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode = 
	{% set temperature = params.TEMPERATURE|default(60) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
	SAVE_CONFIG

[gcode_macro Bed_Level_Screws_Tune]
gcode = 
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Z_Offset]
gcode = 
	CG28
	PROBE_CALIBRATE

[gcode_macro SPEED_TEST]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Speed Test Macro"
	CG28
	AUTO_SPEED

[gcode_macro Auto_Full_Bed_Level]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	Z_Tilt_Adjust_Comp
	BED_MESH_CALIBRATE

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[virtual_sdcard]
path = ~/printer_data/gcodes

[output_pin relay]
pin = PA2
value = 1

[exclude_object]

[stepper_x]
step_pin = PE3
dir_pin = !PE2
enable_pin = !PE4
microsteps = 16
rotation_distance = 40
endstop_pin = !PA15
position_endstop = 0
position_max = 300
homing_speed = 50

[tmc2209 stepper_x]
uart_pin = PC7
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_x]
motor = us-17hs4401s

[motor_constants us-17hs4401s]
resistance = 1.50
inductance = 0.0028
holding_torque = 0.40
max_current = 1.50
steps_per_revolution = 200

[stepper_y]
step_pin = PE0
dir_pin = !PB9
enable_pin = !PE1
microsteps = 16
rotation_distance = 40
endstop_pin = !PA12
position_endstop = 300
position_max = 300
homing_speed = 50

[tmc2209 stepper_y]
uart_pin = PC13
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_y]
motor = us-17hs4401s

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
microsteps = 16
rotation_distance = 8
endstop_pin = !PA11
position_min = -5
position_max = 340

[tmc2209 stepper_z]
uart_pin = PB13
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z]
motor = 42shdc3030z-17b18b

[stepper_z1]
step_pin = PA6
dir_pin = !PA1
enable_pin = !PA3
microsteps = 16
rotation_distance = 8

[tmc2209 stepper_z1]
uart_pin = PB14
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z1]
motor = 42shdc3030z-17b18b

[motor_constants 42shdc3030z-17b18b]
resistance = 1.65
inductance = 0.0028
holding_torque = 0.50
max_current = 1.68
steps_per_revolution = 200

[heater_bed]
heater_pin = PA0
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
control = pid
min_temp = 0
max_temp = 130
pid_kp = 325.10
pid_ki = 63.35
pid_kd = 417.10

[verify_heater heater_bed]
max_error = 120
check_gain_time = 120
hysteresis = 20
heating_gain = 0.2

[safe_z_home]
home_xy_position = 160, 160
speed = 300
z_hop = 7
z_hop_speed = 25

[idle_timeout]
timeout = 1800

[z_tilt]
z_positions = 
	343, 160
	-13, 160
points = 
	20, 160
	290, 160
speed = 300
horizontal_move_z = 7
retries = 10
retry_tolerance = 0.09

[bed_screws]
screw1 = 24, 62
screw1_name = front left
screw2 = 24, 300
screw2_name = back left
screw3 = 293, 300
screw3_name = back right
screw4 = 293, 62
screw4_name = front right

[screws_tilt_adjust]
screw1 = 24, 62
screw1_name = front left
screw2 = 24,300
screw2_name = back left
screw3 = 263, 300
screw3_name = back right
screw4 = 263, 62
screw4_name = front right
horizontal_move_z = 5
speed = 250
screw_thread = CW-M4

[printer]
kinematics = corexy
max_velocity = 400
max_accel = 19840
max_z_velocity = 25
max_z_accel = 100
minimum_cruise_ratio = 0.5
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 1.0

[pause_resume]
recover_velocity = 50.0

[force_move]
enable_force_move = False

[input_shaper]
shaper_freq_x = 82.4
shaper_freq_y = 54.4
shaper_type = mzv

[display_status]
=======================
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 125, in _read_config
    m.add_printer_objects(config)
  File "/home/orangepi/klipper/klippy/toolhead.py", line 677, in add_printer_objects
    config.get_printer().add_object('toolhead', ToolHead(config))
                                                ^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/toolhead.py", line 273, in __init__
    self.kin = mod.load_kinematics(self, config)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/kinematics/corexy.py", line 96, in load_kinematics
    return CoreXYKinematics(toolhead, config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/kinematics/corexy.py", line 12, in __init__
    self.rails = [stepper.LookupMultiRail(config.getsection('stepper_' + n))
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/kinematics/corexy.py", line 12, in <listcomp>
    self.rails = [stepper.LookupMultiRail(config.getsection('stepper_' + n))
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/stepper.py", line 447, in LookupMultiRail
    rail = PrinterRail(config, need_position_minmax,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/stepper.py", line 338, in __init__
    self.position_endstop = config.getfloat('position_endstop')
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 70, in getfloat
    return self._get_wrapper(self.fileconfig.getfloat, option, default,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 37, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'position_endstop' in section 'stepper_z' must be specified
webhooks client 281473395857808: New connection
webhooks client 281473395857808: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
webhooks client 281473395857808: Disconnected
Restarting printer
Start printer at Thu Apr 17 21:33:58 2025 (1744925639.0 378.6)
===== Config file =====
[gcode_macro CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% else %}
	{% endif %}

[gcode_macro G29]
gcode = 
	M400
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE profile=6 mesh_min=15,21 mesh_max=210,220 probe_count=6 algorithm=bicubic
	M400
	G4 P2000
	G91
	G1 Z5 F300
	G90
	G28 Z
	G1 X117.5 Y100 F12000
	G1 Z0 F300

[gcode_macro PRINT_START]
gcode = 
	
	G92 E0
	G90
	
	
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
	{% set BED_MESH = params.BED_MESH|default('default')|string %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	
	SET_BED_TEMPERATURE TARGET={BED_TEMP}
	BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
	{% if BED_HEAT_SOAK_MINUTES > 0 %}
	RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
	G4 P{BED_HEAT_SOAK_MINUTES * 60000}
	{% endif %}
	
	CG28
	
	{% if BED_MESH == 'full' %}
	BED_MESH_CALIBRATE
	{% elif BED_MESH == 'adaptive' %}
	BED_MESH_CALIBRATE ADAPTIVE=1
	{% elif BED_MESH != 'none' %}
	BED_MESH_PROFILE LOAD={BED_MESH}
	{% endif %}
	Smart_Park
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
	LINE_PURGE
	G92 E0
	G1 Z2.0 F3000
	M117 Printing

[gcode_macro PRINT_END]
gcode = 
	
	
	M400
	TURN_OFF_HEATERS
	G92 E0
	G91
	G1 E-2 F2700
	G1 X5 Y5 F3000
	G1 E-2 Z0.2 F1600
	G1 Z4 F3000
	G90
	G1 X0 Y230
	M107
	M84
	
	M117
	END_TUNE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	PAUSE_TUNE
	{% set z = params.Z|default(30)|int %}
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	G91
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 Z{z} F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	{% if printer['pause_resume'].is_paused|int == 1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	G1 E80  F200
	G4 P2000
	G1 X20 F15000
	G1 X-20
	G1 X20
	G1 X-20
	G1 X20
	G1 X-20
	RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60
	G1 X-3 Y-3 F3000
	G1 Z{zhop * -1} F900
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M400
	BASE_RESUME
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	
	{% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
	{% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
	{% set MINIMUM_RATIO    = printer.configfile.settings['printer'].minimum_cruise_ratio|float %}
	{% set SQUARE_VELOCITY   = printer.configfile.settings['printer'].square_corner_velocity|float %}
	
	SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} MINIMUM_CRUISE_RATIO={MINIMUM_RATIO} SQUARE_CORNER_VELOCITY={SQUARE_VELOCITY}
	
	
	{% set z = params.Z|default(100)|int %}
	{% set x_park = params.X|default(printer.toolhead.axis_minimum.x+5)|int %}
	{% set y_park = params.Y|default(printer.toolhead.axis_maximum.y-5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE
	M400
	M220 S100
	M221 S100
	G91
	M83
	G1 E-10.0 F1200
	TURN_OFF_HEATERS
	M107
	{% if (printer.gcode_move.position.z+5) < z %}
	G90
	G0 X{x_park} Y{y_park} Z{z+5} F6000
	{% endif %}
	{%if (printer.gcode_move.position.z+5) >= z %}
	{%if (printer.gcode_move.position.z+5) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z5 F300
	G90
	G0 X{x_park} Y{y_park} F6000
	{% else %}
	G90
	G0 X{x_park} Y{y_park} Z{printer.toolhead.axis_maximum.z} F6000
	{% endif %}
	{% endif %}
	M84

[gcode_macro SET_BED_TEMPERATURE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode = 
	{% if params.MINIMUM is defined and params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
	{% elif params.MINIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
	{% elif params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
	{% else %}
	RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
	{% endif %}

[gcode_macro Axis_Twist_Comp_Tune]
gcode = 
	CG28
	AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Z_Tilt_Adjust_Comp]
gcode = 
	CG28
	Z_TILT_ADJUST

[gcode_macro PID_Tune_EXTRUDER]
gcode = 
	{% set temperature = params.TEMPERATURE|default(210) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=extruder TARGET={temperature}
	SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode = 
	{% set temperature = params.TEMPERATURE|default(60) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
	SAVE_CONFIG

[gcode_macro Bed_Level_Screws_Tune]
gcode = 
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Z_Offset]
gcode = 
	CG28
	PROBE_CALIBRATE

[gcode_macro SPEED_TEST]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Speed Test Macro"
	CG28
	AUTO_SPEED

[gcode_macro Auto_Full_Bed_Level]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	Z_Tilt_Adjust_Comp
	BED_MESH_CALIBRATE

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[virtual_sdcard]
path = ~/printer_data/gcodes

[output_pin relay]
pin = PA2
value = 1

[exclude_object]

[stepper_x]
step_pin = PE3
dir_pin = !PE2
enable_pin = !PE4
microsteps = 16
rotation_distance = 40
endstop_pin = !PA15
position_endstop = 0
position_max = 300
homing_speed = 50

[tmc2209 stepper_x]
uart_pin = PC7
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_x]
motor = us-17hs4401s

[motor_constants us-17hs4401s]
resistance = 1.50
inductance = 0.0028
holding_torque = 0.40
max_current = 1.50
steps_per_revolution = 200

[stepper_y]
step_pin = PE0
dir_pin = !PB9
enable_pin = !PE1
microsteps = 16
rotation_distance = 40
endstop_pin = !PA12
position_endstop = 300
position_max = 300
homing_speed = 50

[tmc2209 stepper_y]
uart_pin = PC13
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_y]
motor = us-17hs4401s

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
microsteps = 16
rotation_distance = 8
endstop_pin = !PA11
position_endstop = 0.5
position_max = 340

[tmc2209 stepper_z]
uart_pin = PB13
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z]
motor = 42shdc3030z-17b18b

[stepper_z1]
step_pin = PA6
dir_pin = !PA1
enable_pin = !PA3
microsteps = 16
rotation_distance = 8

[tmc2209 stepper_z1]
uart_pin = PB14
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z1]
motor = 42shdc3030z-17b18b

[motor_constants 42shdc3030z-17b18b]
resistance = 1.65
inductance = 0.0028
holding_torque = 0.50
max_current = 1.68
steps_per_revolution = 200

[heater_bed]
heater_pin = PA0
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
control = pid
min_temp = 0
max_temp = 130
pid_kp = 325.10
pid_ki = 63.35
pid_kd = 417.10

[verify_heater heater_bed]
max_error = 120
check_gain_time = 120
hysteresis = 20
heating_gain = 0.2

[safe_z_home]
home_xy_position = 160, 160
speed = 300
z_hop = 7
z_hop_speed = 25

[idle_timeout]
timeout = 1800

[z_tilt]
z_positions = 
	343, 160
	-13, 160
points = 
	20, 160
	290, 160
speed = 300
horizontal_move_z = 7
retries = 10
retry_tolerance = 0.09

[bed_screws]
screw1 = 24, 62
screw1_name = front left
screw2 = 24, 300
screw2_name = back left
screw3 = 293, 300
screw3_name = back right
screw4 = 293, 62
screw4_name = front right

[screws_tilt_adjust]
screw1 = 24, 62
screw1_name = front left
screw2 = 24,300
screw2_name = back left
screw3 = 263, 300
screw3_name = back right
screw4 = 263, 62
screw4_name = front right
horizontal_move_z = 5
speed = 250
screw_thread = CW-M4

[printer]
kinematics = corexy
max_velocity = 400
max_accel = 19840
max_z_velocity = 25
max_z_accel = 100
minimum_cruise_ratio = 0.5
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 1.0

[pause_resume]
recover_velocity = 50.0

[force_move]
enable_force_move = False

[input_shaper]
shaper_freq_x = 82.4
shaper_freq_y = 54.4
shaper_type = mzv

[display_status]
=======================
mcu 'mcu': Starting serial connect
webhooks client 281473409144720: New connection
webhooks client 281473409144720: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
Loaded MCU 'mcu' 121 commands (v0.13.0-33-g413ff19e / gcc: (15:12.2.rel1-1) 12.2.1 20221205 binutils: (2.40-2+18+b1) 2.40)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 INITIAL_PINS=!PC6,!PD13 MCU=stm32f103xe PWM_MAX=257 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PB11,PB10 SERIAL_BAUD=250000 STATS_SUMSQ_BASE=256 STEPPER_STEP_BOTH_EDGE=1
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Starting heater checks for heater_bed
autotune_tmc set stepper_x pwm_freq=2
autotune_tmc set stepper_y pwm_freq=2
autotune_tmc set stepper_z pwm_freq=2
autotune_tmc set stepper_z1 pwm_freq=2
autotune_tmc stepper_x ncycles=219 pfdcycles=73
autotune_tmc set stepper_x tbl=1
autotune_tmc stepper_y ncycles=219 pfdcycles=73
autotune_tmc set stepper_y tbl=1
autotune_tmc stepper_z ncycles=219 pfdcycles=73
autotune_tmc set stepper_z tbl=1
autotune_tmc stepper_z1 ncycles=219 pfdcycles=73
autotune_tmc set stepper_z1 tbl=1
autotune_tmc set stepper_x toff=1
autotune_tmc set stepper_y toff=1
autotune_tmc set stepper_z toff=1
autotune_tmc set stepper_z1 toff=1
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.017143, dcoilsd = 0.003486
hysteresis = 5, htotal = 5, hstrt = 5, hend = 0
autotune_tmc set stepper_x hstrt=4
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.017143, dcoilsd = 0.003486
hysteresis = 5, htotal = 5, hstrt = 5, hend = 0
autotune_tmc set stepper_y hstrt=4
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.017143, dcoilsd = 0.003834
hysteresis = 5, htotal = 5, hstrt = 5, hend = 0
autotune_tmc set stepper_z hstrt=4
autotune_tmc seting hysteresis based on 24.0 V
dcoilblank = 0.017143, dcoilsd = 0.003834
hysteresis = 5, htotal = 5, hstrt = 5, hend = 0
autotune_tmc set stepper_z1 hstrt=4
autotune_tmc set stepper_x hend=3
autotune_tmc set stepper_y hend=3
autotune_tmc set stepper_z hend=3
autotune_tmc set stepper_z1 hend=3
autotune_tmc set stepper_x sgthrs=40
autotune_tmc set stepper_y sgthrs=40
autotune_tmc set stepper_z sgthrs=40
autotune_tmc set stepper_z1 sgthrs=40
autotune_tmc using max PWM speed 229.183118
autotune_tmc set stepper_x pwm_autoscale=True
autotune_tmc using max PWM speed 229.183118
autotune_tmc set stepper_y pwm_autoscale=True
autotune_tmc using max PWM speed 42.198796
autotune_tmc set stepper_z pwm_autoscale=True
autotune_tmc using max PWM speed 42.198796
autotune_tmc set stepper_z1 pwm_autoscale=True
autotune_tmc set stepper_x pwm_autograd=True
autotune_tmc set stepper_y pwm_autograd=True
autotune_tmc set stepper_z pwm_autograd=True
autotune_tmc set stepper_z1 pwm_autograd=True
autotune_tmc set stepper_x pwm_grad=12
autotune_tmc set stepper_y pwm_grad=12
autotune_tmc set stepper_z pwm_grad=14
autotune_tmc set stepper_z1 pwm_grad=14
autotune_tmc set stepper_x pwm_ofs=21
autotune_tmc set stepper_y pwm_ofs=21
webhooks: registering remote method 'shutdown_machine' for connection id: 281473409144720
webhooks: registering remote method 'reboot_machine' for connection id: 281473409144720
webhooks: registering remote method 'pause_job_queue' for connection id: 281473409144720
webhooks: registering remote method 'start_job_queue' for connection id: 281473409144720
autotune_tmc set stepper_z pwm_ofs=23
autotune_tmc set stepper_z1 pwm_ofs=23
autotune_tmc set stepper_x pwm_reg=15
autotune_tmc set stepper_y pwm_reg=15
autotune_tmc set stepper_z pwm_reg=15
autotune_tmc set stepper_z1 pwm_reg=15
autotune_tmc set stepper_x pwm_lim=4
autotune_tmc set stepper_y pwm_lim=4
autotune_tmc set stepper_z pwm_lim=4
autotune_tmc set stepper_z1 pwm_lim=4
autotune_tmc set stepper_x tpwmthrs=1048575
autotune_tmc set stepper_y tpwmthrs=1048575
autotune_tmc set stepper_z tpwmthrs=0
autotune_tmc set stepper_z1 tpwmthrs=0
autotune_tmc set stepper_x en_spreadcycle=True
autotune_tmc set stepper_y en_spreadcycle=True
autotune_tmc set stepper_z en_spreadcycle=False
autotune_tmc set stepper_z1 en_spreadcycle=False
autotune_tmc set stepper_x tcoolthrs=313(30.0)
autotune_tmc set stepper_x semin=2
autotune_tmc set stepper_y tcoolthrs=313(30.0)
autotune_tmc set stepper_y semin=2
autotune_tmc set stepper_z tcoolthrs=313(6.0)
autotune_tmc set stepper_z semin=2
autotune_tmc set stepper_z1 tcoolthrs=313(6.0)
autotune_tmc set stepper_z1 semin=2
autotune_tmc set stepper_x semax=4
autotune_tmc set stepper_y semax=4
autotune_tmc set stepper_z semax=4
autotune_tmc set stepper_z1 semax=4
autotune_tmc set stepper_x seup=3
autotune_tmc set stepper_y seup=3
autotune_tmc set stepper_z seup=3
autotune_tmc set stepper_z1 seup=3
autotune_tmc set stepper_x sedn=2
autotune_tmc set stepper_y sedn=2
autotune_tmc set stepper_z sedn=2
autotune_tmc set stepper_z1 sedn=2
autotune_tmc set stepper_x seimin=1
autotune_tmc set stepper_y seimin=1
autotune_tmc set stepper_z seimin=1
autotune_tmc set stepper_z1 seimin=1
autotune_tmc set stepper_x iholddelay=12
autotune_tmc set stepper_y iholddelay=12
autotune_tmc set stepper_z iholddelay=12
autotune_tmc set stepper_z1 iholddelay=12
autotune_tmc set stepper_x multistep_filt=True
autotune_tmc set stepper_y multistep_filt=True
autotune_tmc set stepper_z multistep_filt=True
autotune_tmc set stepper_z1 multistep_filt=True
Starting Klippy...
Args: ['/home/orangepi/klipper/klippy/klippy.py', '/home/orangepi/printer_data/config/printer.cfg', '-I', '/home/orangepi/printer_data/comms/klippy.serial', '-l', '/home/orangepi/printer_data/logs/klippy.log', '-a', '/home/orangepi/printer_data/comms/klippy.sock']
Git version: 'v0.13.0-33-g413ff19e-dirty'
Untracked files: klippy/extras/auto_speed.py, klippy/extras/autotune_tmc.py, klippy/extras/motor_constants.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, Nov 30 2024, 21:22:50) [GCC 12.2.0]'
Start printer at Thu Apr 17 21:27:49 2025 (1744925269.9 22.9)
===== Config file =====
[gcode_macro CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% else %}
	{% endif %}

[gcode_macro G29]
gcode = 
	M400
	BED_MESH_CLEAR
	G28
	BED_MESH_CALIBRATE profile=6 mesh_min=15,21 mesh_max=210,220 probe_count=6 algorithm=bicubic
	M400
	G4 P2000
	G91
	G1 Z5 F300
	G90
	G28 Z
	G1 X117.5 Y100 F12000
	G1 Z0 F300

[gcode_macro PRINT_START]
gcode = 
	
	G92 E0
	G90
	
	
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set BED_HEAT_SOAK_MINUTES = params.BED_HEAT_SOAK_MINUTES|default(0)|float %}
	{% set BED_MESH = params.BED_MESH|default('default')|string %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	
	SET_BED_TEMPERATURE TARGET={BED_TEMP}
	BED_TEMPERATURE_WAIT MINIMUM={BED_TEMP-2} MAXIMUM={BED_TEMP+4}
	{% if BED_HEAT_SOAK_MINUTES > 0 %}
	RESPOND MSG="Waiting {BED_HEAT_SOAK_MINUTES} minutes for the bed to settle."
	G4 P{BED_HEAT_SOAK_MINUTES * 60000}
	{% endif %}
	
	CG28
	
	{% if BED_MESH == 'full' %}
	BED_MESH_CALIBRATE
	{% elif BED_MESH == 'adaptive' %}
	BED_MESH_CALIBRATE ADAPTIVE=1
	{% elif BED_MESH != 'none' %}
	BED_MESH_PROFILE LOAD={BED_MESH}
	{% endif %}
	Smart_Park
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
	LINE_PURGE
	G92 E0
	G1 Z2.0 F3000
	M117 Printing

[gcode_macro PRINT_END]
gcode = 
	
	
	M400
	TURN_OFF_HEATERS
	G92 E0
	G91
	G1 E-2 F2700
	G1 X5 Y5 F3000
	G1 E-2 Z0.2 F1600
	G1 Z4 F3000
	G90
	G1 X0 Y230
	M107
	M84
	
	M117
	END_TUNE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	PAUSE_TUNE
	{% set z = params.Z|default(30)|int %}
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	G91
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 Z{z} F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	G1 E-2 F2700
	G1 X3 Y3 F3000
	G1 E-2 F1600
	SAVE_GCODE_STATE NAME=ZLIFT
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_minimum.x+5} Y{printer.toolhead.axis_maximum.y-5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	{% if printer['pause_resume'].is_paused|int == 1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	G1 E80  F200
	G4 P2000
	G1 X20 F15000
	G1 X-20
	G1 X20
	G1 X-20
	G1 X20
	G1 X-20
	RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60
	G1 X-3 Y-3 F3000
	G1 Z{zhop * -1} F900
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	M400
	BASE_RESUME
	{% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	
	{% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
	{% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
	{% set MINIMUM_RATIO    = printer.configfile.settings['printer'].minimum_cruise_ratio|float %}
	{% set SQUARE_VELOCITY   = printer.configfile.settings['printer'].square_corner_velocity|float %}
	
	SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} MINIMUM_CRUISE_RATIO={MINIMUM_RATIO} SQUARE_CORNER_VELOCITY={SQUARE_VELOCITY}
	
	
	{% set z = params.Z|default(100)|int %}
	{% set x_park = params.X|default(printer.toolhead.axis_minimum.x+5)|int %}
	{% set y_park = params.Y|default(printer.toolhead.axis_maximum.y-5)|int %}
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	SDCARD_RESET_FILE
	M400
	M220 S100
	M221 S100
	G91
	M83
	G1 E-10.0 F1200
	TURN_OFF_HEATERS
	M107
	{% if (printer.gcode_move.position.z+5) < z %}
	G90
	G0 X{x_park} Y{y_park} Z{z+5} F6000
	{% endif %}
	{%if (printer.gcode_move.position.z+5) >= z %}
	{%if (printer.gcode_move.position.z+5) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z5 F300
	G90
	G0 X{x_park} Y{y_park} F6000
	{% else %}
	G90
	G0 X{x_park} Y{y_park} Z{printer.toolhead.axis_maximum.z} F6000
	{% endif %}
	{% endif %}
	M84

[gcode_macro SET_BED_TEMPERATURE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode = 
	{% if params.MINIMUM is defined and params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
	{% elif params.MINIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
	{% elif params.MAXIMUM is defined %}
	TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
	{% else %}
	RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
	{% endif %}

[gcode_macro Axis_Twist_Comp_Tune]
gcode = 
	CG28
	AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Z_Tilt_Adjust_Comp]
gcode = 
	CG28
	Z_TILT_ADJUST

[gcode_macro PID_Tune_EXTRUDER]
gcode = 
	{% set temperature = params.TEMPERATURE|default(210) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=extruder TARGET={temperature}
	SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode = 
	{% set temperature = params.TEMPERATURE|default(60) %}
	CG28
	M106 S255
	PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
	SAVE_CONFIG

[gcode_macro Bed_Level_Screws_Tune]
gcode = 
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Z_Offset]
gcode = 
	CG28
	PROBE_CALIBRATE

[gcode_macro SPEED_TEST]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Speed Test Macro"
	CG28
	AUTO_SPEED

[gcode_macro Auto_Full_Bed_Level]
gcode = 
	RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
	BED_MESH_CLEAR
	SET_BED_TEMPERATURE TARGET=60
	BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
	CG28
	Z_Tilt_Adjust_Comp
	BED_MESH_CALIBRATE

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[virtual_sdcard]
path = ~/printer_data/gcodes

[output_pin relay]
pin = PA2
value = 1

[exclude_object]

[stepper_x]
step_pin = PE3
dir_pin = !PE2
enable_pin = !PE4
microsteps = 16
rotation_distance = 40
endstop_pin = !PA15
position_endstop = 0
position_max = 300
homing_speed = 50

[tmc2209 stepper_x]
uart_pin = PC7
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_x]
motor = us-17hs4401s

[motor_constants us-17hs4401s]
resistance = 1.50
inductance = 0.0028
holding_torque = 0.40
max_current = 1.50
steps_per_revolution = 200

[stepper_y]
step_pin = PE0
dir_pin = !PB9
enable_pin = !PE1
microsteps = 16
rotation_distance = 40
endstop_pin = !PA12
position_endstop = 300
position_max = 300
homing_speed = 50

[tmc2209 stepper_y]
uart_pin = PC13
interpolate = True
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_y]
motor = us-17hs4401s

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
microsteps = 16
rotation_distance = 8
endstop_pin = !PA11
position_endstop = 0.5
position_max = 340

[tmc2209 stepper_z]
uart_pin = PB13
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z]
motor = 42shdc3030z-17b18b

[stepper_z1]
step_pin = PA6
dir_pin = !PA1
enable_pin = !PA3
microsteps = 16
rotation_distance = 8

[tmc2209 stepper_z1]
uart_pin = PB14
interpolate = True
run_current = 0.9
hold_current = 0.6
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc stepper_z1]
motor = 42shdc3030z-17b18b

[motor_constants 42shdc3030z-17b18b]
resistance = 1.65
inductance = 0.0028
holding_torque = 0.50
max_current = 1.68
steps_per_revolution = 200

[extruder]
step_pin = PD6
dir_pin = !PD3
enable_pin = !PB3
microsteps = 16
gear_ratio = 9.5:1
rotation_distance = 43.844
nozzle_diameter = 0.4
filament_diameter = 1.75
heater_pin = PC3
sensor_type = ATC Semitec 104GT-2
sensor_pin = PC1
min_temp = 0
max_temp = 300
min_extrude_temp = 150
pressure_advance = 0.05
pressure_advance_smooth_time = 0.040
max_extrude_cross_section = 5

[verify_heater extruder]
max_error = 200
check_gain_time = 35
hysteresis = 100
heating_gain = 1

[tmc2209 extruder]
uart_pin = PE5
interpolate = True
run_current = 0.75
sense_resistor = 0.110
stealthchop_threshold = 0

[autotune_tmc extruder]
motor = bjy36d12-04v05

[motor_constants bjy36d12-04v05]
resistance = 2.0
inductance = 0.0012
holding_torque = 0.09
max_current = 0.8
steps_per_revolution = 200

[fan]
pin = PB1
kick_start_time = 0.5
off_below = 0.10

[heater_bed]
heater_pin = PA0
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
control = pid
min_temp = 0
max_temp = 130
pid_kp = 325.10
pid_ki = 63.35
pid_kd = 417.10

[verify_heater heater_bed]
max_error = 120
check_gain_time = 120
hysteresis = 20
heating_gain = 0.2

[safe_z_home]
home_xy_position = 160, 160
speed = 300
z_hop = 7
z_hop_speed = 25

[idle_timeout]
timeout = 1800

[z_tilt]
z_positions = 
	343, 160
	-13, 160
points = 
	20, 160
	290, 160
speed = 300
horizontal_move_z = 7
retries = 10
retry_tolerance = 0.09

[bed_screws]
screw1 = 24, 62
screw1_name = front left
screw2 = 24, 300
screw2_name = back left
screw3 = 293, 300
screw3_name = back right
screw4 = 293, 62
screw4_name = front right

[screws_tilt_adjust]
screw1 = 24, 62
screw1_name = front left
screw2 = 24,300
screw2_name = back left
screw3 = 263, 300
screw3_name = back right
screw4 = 263, 62
screw4_name = front right
horizontal_move_z = 5
speed = 250
screw_thread = CW-M4

[printer]
kinematics = corexy
max_velocity = 400
max_accel = 19840
max_z_velocity = 25
max_z_accel = 100
minimum_cruise_ratio = 0.5
square_corner_velocity = 5.0

[gcode_arcs]
resolution = 1.0

[pause_resume]
recover_velocity = 50.0

[force_move]
enable_force_move = False

[input_shaper]
shaper_freq_x = 82.4
shaper_freq_y = 54.4
shaper_type = mzv

[display_status]
=======================
Config error
Traceback (most recent call last):
  File "/home/orangepi/klipper/klippy/klippy.py", line 130, in _connect
    self._read_config()
  File "/home/orangepi/klipper/klippy/klippy.py", line 125, in _read_config
    m.add_printer_objects(config)
  File "/home/orangepi/klipper/klippy/toolhead.py", line 678, in add_printer_objects
    kinematics.extruder.add_printer_objects(config)
  File "/home/orangepi/klipper/klippy/kinematics/extruder.py", line 313, in add_printer_objects
    pe = PrinterExtruder(config.getsection(section), i)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/kinematics/extruder.py", line 143, in __init__
    self.heater = pheaters.setup_heater(config, gcode_id)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/heaters.py", line 279, in setup_heater
    self.heaters[heater_name] = heater = Heater(config, sensor)
                                         ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/extras/heaters.py", line 50, in __init__
    algo = config.getchoice('control', algos)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 82, in getchoice
    c = self.get(option, default, note_valid=note_valid)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 62, in get
    return self._get_wrapper(self.fileconfig.get, option, default,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/orangepi/klipper/klippy/configfile.py", line 37, in _get_wrapper
    raise error("Option '%s' in section '%s' must be specified"
configparser.Error: Option 'control' in section 'extruder' must be specified
webhooks client 281473139214800: New connection
webhooks client 281473139214800: Client info {'program': 'Moonraker', 'version': 'v0.9.3-72-g7cdcca3'}
