# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_050029000F504B5735313720-if00

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z


# [filament_switch_sensor my_sensor]
# pause_on_runout: True
# #   When set to True, a PAUSE will execute immediately after a runout
# #   is detected. Note that if pause_on_runout is False and the
# #   runout_gcode is omitted then runout detection is disabled. Default
# #   is True.
# #runout_gcode:
# #   A list of G-Code commands to execute after a filament runout is
# #   detected. See docs/Command_Templates.md for G-Code format. If
# #   pause_on_runout is set to True this G-Code will run after the
# #   PAUSE is complete. The default is not to run any G-Code commands.
# #insert_gcode:
# #   A list of G-Code commands to execute after a filament insert is
# #   detected. See docs/Command_Templates.md for G-Code format. The
# #   default is not to run any G-Code commands, which disables insert
# #   detection.
# event_delay: 3.0
# #   The minimum amount of time in seconds to delay between events.
# #   Events triggered during this time period will be silently
# #   ignored. The default is 3 seconds.
# pause_delay: 0.5
# #   The amount of time to delay, in seconds, between the pause command
# #   dispatch and execution of the runout_gcode. It may be useful to
# #   increase this delay if OctoPrint exhibits strange pause behavior.
# #   Default is 0.5 seconds.
# switch_pin: !EBBCan: PB6
# #   The pin on which the switch is connected. This parameter must be
# #   provided.

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
gear_ratio: 9.5:1

#rotation_distance = <actual_rotation_distance> * (<distance_calculete> / 100)
rotation_distance: 43.844
nozzle_diameter: 0.4
filament_diameter: 1.75
heater_pin: EBBCan: PB13
sensor_type: ATC Semitec 104GT-2
sensor_pin: EBBCan: PA3

min_temp: 0
max_temp: 300
min_extrude_temp: 150
pressure_advance: 0.05
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
max_extrude_cross_section: 5

[verify_heater extruder]
max_error: 200
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 35
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 100
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 1
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.


[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: True
run_current: 0.75 
#hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0

[autotune_tmc extruder]
motor: bjy36d12-04v05

[motor_constants bjy36d12-04v05]
resistance: 2.0
inductance: 0.0012
holding_torque: 0.09
max_current: 0.8
steps_per_revolution: 200


[fan]
pin: EBBCan: PA0
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##	Hotend Fan - FAN0 Connector
##  Uncomment below for SpiderVersion 2.2
pin: EBBCan: PA1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0


#[bltouch]
#sensor_pin: ^EBBCan:PB8
#control_pin: EBBCan:PB9

[filament_switch_sensor switch_sensor]
switch_pin: EBBCan:PB4

#[filament_motion_sensor motion_sensor]
#switch_pin: ^EBBCan:PB3
